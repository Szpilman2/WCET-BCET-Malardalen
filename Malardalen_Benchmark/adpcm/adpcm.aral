ANALYSIS
IDMAP
map(label, string): {default->"" \ @32->"main::16", @607->"alf_label_276", @609->"alf_label_271", @612->"alf_label_274", @613->"alf_label_273", @616->"alf_label_272", @610->"alf_label_270", @620->"alf_label_267", @626->"alf_label_268", @621->"alf_label_266", @630->"alf_label_263", @635->"alf_label_264", @631->"alf_label_262", @638->"alf_label_261", @639->"alf_label_260", @641->"alf_label_259", @30->"logsch::15", @596->"alf_label_258", @598->"alf_label_256", @599->"alf_label_257", @601->"alf_label_254", @602->"alf_label_255", @603->"alf_label_253", @604->"alf_label_252", @28->"uppol1::14", @579->"alf_label_251", @581->"alf_label_249", @582->"alf_label_250", @584->"alf_label_247", @585->"alf_label_248", @586->"alf_label_246", @588->"alf_label_243", @590->"alf_label_245", @589->"alf_label_244", @591->"alf_label_242", @26->"uppol2::13", @558->"alf_label_241", @560->"alf_label_239", @561->"alf_label_240", @563->"alf_label_237", @564->"alf_label_238", @565->"alf_label_236", @567->"alf_label_233", @569->"alf_label_235", @568->"alf_label_234", @570->"alf_label_232", @572->"alf_label_230", @573->"alf_label_231", @574->"alf_label_229", @24->"upzero::12", @532->"alf_label_228", @533->"alf_label_227", @534->"alf_label_226", @535->"alf_label_225", @536->"alf_label_224", @538->"alf_label_208", @545->"alf_label_216", @548->"alf_label_221", @549->"alf_label_220", @551->"alf_label_217", @553->"alf_label_219", @552->"alf_label_218", @546->"alf_label_215", @540->"alf_label_210", @543->"alf_label_211", @541->"alf_label_209", @22->"scalel::11", @524->"alf_label_207", @525->"alf_label_206", @526->"alf_label_205", @527->"alf_label_204", @20->"logscl::10", @513->"alf_label_203", @515->"alf_label_201", @516->"alf_label_202", @518->"alf_label_199", @519->"alf_label_200", @520->"alf_label_198", @521->"alf_label_197", @18->"quantl::9", @490->"alf_label_196", @492->"alf_label_193", @494->"alf_label_195", @493->"alf_label_194", @496->"alf_label_188", @500->"alf_label_190", @502->"alf_label_189", @497->"alf_label_187", @505->"alf_label_186", @16->"filtep::8", @482->"alf_label_185", @483->"alf_label_184", @484->"alf_label_183", @485->"alf_label_182", @486->"alf_label_181", @14->"filtez::7", @472->"alf_label_180", @474->"alf_label_177", @477->"alf_label_178", @475->"alf_label_176", @478->"alf_label_175", @12->"reset::6", @438->"alf_label_170", @441->"alf_label_172", @442->"alf_label_171", @439->"alf_label_169", @444->"alf_label_166", @447->"alf_label_167", @445->"alf_label_165", @449->"alf_label_159", @452->"alf_label_163", @453->"alf_label_162", @454->"alf_label_161", @455->"alf_label_160", @450->"alf_label_158", @457->"alf_label_152", @460->"alf_label_156", @461->"alf_label_155", @462->"alf_label_154", @463->"alf_label_153", @458->"alf_label_151", @464->"alf_label_150", @465->"alf_label_149", @466->"alf_label_148", @467->"alf_label_147", @468->"alf_label_146", @469->"alf_label_145", @10->"decode::5", @281->"alf_label_144", @282->"alf_label_143", @284->"alf_label_139", @287->"alf_label_141", @288->"alf_label_140", @285->"alf_label_138", @289->"alf_label_137", @290->"alf_label_136", @291->"alf_label_135", @292->"alf_label_134", @293->"alf_label_133", @294->"alf_label_132", @296->"alf_label_128", @299->"alf_label_130", @300->"alf_label_129", @297->"alf_label_127", @301->"alf_label_126", @302->"alf_label_125", @303->"alf_label_124", @304->"alf_label_123", @305->"alf_label_122", @306->"alf_label_121", @307->"alf_label_120", @308->"alf_label_119", @309->"alf_label_118", @310->"alf_label_117", @311->"alf_label_116", @312->"alf_label_115", @318->"alf_label_114", @327->"alf_label_113", @334->"alf_label_112", @337->"alf_label_111", @341->"alf_label_110", @347->"alf_label_109", @350->"alf_label_108", @351->"alf_label_107", @357->"alf_label_106", @363->"alf_label_105", @366->"alf_label_104", @367->"alf_label_103", @368->"alf_label_102", @369->"alf_label_101", @370->"alf_label_100", @376->"alf_label_99", @385->"alf_label_98", @392->"alf_label_97", @395->"alf_label_96", @399->"alf_label_95", @405->"alf_label_94", @408->"alf_label_93", @409->"alf_label_92", @410->"alf_label_91", @411->"alf_label_90", @417->"alf_label_89", @423->"alf_label_88", @426->"alf_label_87", @427->"alf_label_86", @8->"encode::4", @114->"alf_label_85", @115->"alf_label_84", @116->"alf_label_83", @117->"alf_label_82", @118->"alf_label_81", @119->"alf_label_80", @125->"alf_label_79", @134->"alf_label_78", @141->"alf_label_77", @144->"alf_label_76", @148->"alf_label_75", @154->"alf_label_74", @157->"alf_label_73", @159->"alf_label_71", @164->"alf_label_72", @161->"alf_label_70", @165->"alf_label_69", @167->"alf_label_66", @169->"alf_label_68", @168->"alf_label_67", @170->"alf_label_65", @171->"alf_label_64", @177->"alf_label_63", @183->"alf_label_62", @186->"alf_label_61", @187->"alf_label_60", @188->"alf_label_59", @189->"alf_label_58", @190->"alf_label_57", @196->"alf_label_56", @205->"alf_label_55", @212->"alf_label_54", @215->"alf_label_53", @219->"alf_label_52", @225->"alf_label_51", @228->"alf_label_50", @232->"alf_label_49", @235->"alf_label_48", @236->"alf_label_47", @242->"alf_label_46", @248->"alf_label_45", @251->"alf_label_44", @252->"alf_label_43", @253->"alf_label_42", @254->"alf_label_41", @256->"alf_label_38", @259->"alf_label_39", @257->"alf_label_37", @260->"alf_label_36", @261->"alf_label_35", @262->"alf_label_34", @264->"alf_label_30", @267->"alf_label_32", @268->"alf_label_31", @265->"alf_label_29", @269->"alf_label_28", @270->"alf_label_27", @271->"alf_label_26", @272->"alf_label_25", @6->"my_cos::3", @109->"alf_label_24", @110->"alf_label_23", @4->"my_sin::2", @82->"alf_label_22", @84->"alf_label_18", @89->"alf_label_21", @90->"alf_label_20", @91->"alf_label_19", @86->"alf_label_17", @92->"alf_label_16", @93->"alf_label_15", @94->"alf_label_14", @95->"alf_label_13", @96->"alf_label_12", @98->"alf_label_10", @99->"alf_label_11", @101->"alf_label_8", @102->"alf_label_9", @2->"my_fabs::1", @75->"alf_label_7", @77->"alf_label_4", @79->"alf_label_6", @78->"alf_label_5", @0->"my_abs::0", @68->"alf_label_3", @70->"alf_label_0", @72->"alf_label_2", @71->"alf_label_1"};

map(varid, string): {default->"" \ #2147483647->"::2147483647", #728->"ac_ptr1::728", #712->"ac_ptr::712", #774->"accumc::774", #772->"accumd::772", #722->"ad_ptr1::722", #708->"ad_ptr::708", #550->"ah1::550", #554->"ah2::554", #1135->"al1::1135", #1164->"al1::1164", #2147483647->"al1::2147483647", #620->"al1::620", #981->"al1::981", #1106->"al2::1106", #2147483647->"al2::2147483647", #623->"al2::623", #972->"al2::972", #1139->"apl1::1139", #1097->"apl2::1097", #1148->"apl2::1148", #2147483647->"apl2::2147483647", #493->"app::493", #1074->"bli::1074", #2147483647->"bli::2147483647", #2147483647->"bpl::2147483647", #957->"bpl::957", #2147483647->"coef::2147483647", #1200->"compressed::1200", #796->"dec_ah1::796", #799->"dec_ah2::799", #840->"dec_al1::840", #843->"dec_al2::843", #804->"dec_del_bph::804", #848->"dec_del_bpl::848", #803->"dec_del_dhx::803", #847->"dec_del_dltx::847", #808->"dec_deth::808", #852->"dec_detl::852", #793->"dec_dh::793", #837->"dec_dlt::837", #811->"dec_nbh::811", #855->"dec_nbl::855", #783->"dec_ph1::783", #786->"dec_ph2::786", #784->"dec_ph::784", #826->"dec_plt1::826", #829->"dec_plt2::829", #827->"dec_plt::827", #788->"dec_rh1::788", #790->"dec_rh2::790", #1229->"dec_rh::1229", #831->"dec_rlt1::831", #834->"dec_rlt2::834", #832->"dec_rlt::832", #792->"dec_sh::792", #836->"dec_sl::836", #819->"dec_sph::819", #877->"dec_spl::877", #805->"dec_szh::805", #849->"dec_szl::849", #1228->"dec_yh::1228", #1004->"decis::1004", #582->"decis::582", #1006->"decis_levl::1006", #562->"delay_bph::562", #628->"delay_bpl::628", #561->"delay_dhx::561", #627->"delay_dltx::627", #566->"deth::566", #1009->"detl::1009", #2147483647->"detl::2147483647", #632->"detl::632", #547->"dh::547", #499->"diff::499", #859->"dl::859", #1058->"dlt::1058", #2147483647->"dlt::2147483647", #617->"dlt::617", #961->"dlt::961", #1056->"dlti::1056", #2147483647->"dlti::2147483647", #584->"eh::584", #2147483647->"el::2147483647", #649->"el::649", #991->"el::991", #1215->"f::1215", #486->"f::486", #706->"h::706", #689->"h_ptr::689", #747->"h_ptr::747", #2147483647->"history::2147483647", #1070->"i::1070", #1188->"i::1188", #678->"i::678", #716->"i::716", #889->"i::889", #953->"i::953", #1178->"ih::1178", #2147483647->"ih::2147483647", #532->"ih::532", #1027->"il::1027", #2147483647->"il::2147483647", #531->"il::531", #1041->"ilb_table::1041", #858->"ilr::858", #1223->"imag::1223", #500->"inc::500", #2147483647->"input::2147483647", #884->"input::884", #1210->"j::1210", #479->"m::479", #994->"mil::994", #2147483647->"n::2147483647", #481->"n::481", #488->"n::488", #1169->"nbh::1169", #2147483647->"nbh::2147483647", #569->"nbh::569", #1017->"nbl::1017", #1050->"nbl::1050", #2147483647->"nbl::2147483647", #635->"nbl::635", #536->"ph1::536", #539->"ph2::539", #537->"ph::537", #974->"pl2::974", #968->"pl::968", #1128->"plt1::1128", #1153->"plt1::1153", #2147483647->"plt1::2147483647", #606->"plt1::606", #1115->"plt2::1115", #2147483647->"plt2::2147483647", #609->"plt2::609", #1113->"plt::1113", #1151->"plt::1151", #2147483647->"plt::2147483647", #607->"plt::607", #573->"qq2_code2_table::573", #639->"qq4_code4_table::639", #1224->"qq5_code5_table::1224", #863->"qq6_code6_table::863", #997->"quant26bt_neg::997", #993->"quant26bt_pos::993", #504->"rad::504", #529->"rad::529", #1222->"real::1222", #1187->"result::1187", #541->"rh1::541", #544->"rh2::544", #778->"rh::778", #989->"ril::989", #777->"rl::777", #2147483647->"rlt1::2147483647", #611->"rlt1::611", #985->"rlt1::985", #2147483647->"rlt2::2147483647", #614->"rlt2::614", #977->"rlt2::977", #612->"rlt::612", #1226->"rs::1226", #546->"sh::546", #1044->"shift_constant::1044", #2147483647->"shift_constant::2147483647", #616->"sl::616", #599->"sph::599", #653->"spl::653", #563->"szh::563", #629->"szl::629", #1205->"test_data::1205", #704->"tqmf::704", #682->"tqmf_ptr1::682", #670->"tqmf_ptr::670", #1042->"wd1::1042", #1046->"wd2::1046", #1083->"wd2::1083", #1120->"wd2::1120", #1157->"wd2::1157", #1038->"wd3::1038", #1084->"wd3::1084", #1141->"wd3::1141", #1105->"wd4::1105", #1003->"wd::1003", #1024->"wd::1024", #1176->"wd::1176", #1177->"wh_code_table::1177", #1026->"wl_code_table::1026", #1225->"wl_table::1225", #742->"xa1::742", #737->"xa2::737", #660->"xa::660", #661->"xb::661", #714->"xd::714", #596->"xh::596", #676->"xin1::676", #672->"xin2::672", #650->"xl::650", #741->"xout1::741", #736->"xout2::736", #710->"xs::710", #542->"yh::542", #1227->"yl::1227", #949->"zl::949"};

RESULT NAME interval
TYPE <tuple(funcid, int(32))>
     map(varid, tuple(lift(int(32)), lift(int(32))))
DATA
END

RESULT NAME pointsto_locations
TYPE location = int(32);
     funcname = string;
     set(tuple(location, list(varid), list(funcname)))
DATA
program noflow {(273,[#1215],[]), (272,[#1210],[]), (271,[#1205],[]), (270,[#1205],[]), (269,[#1200],[]), (268,[#1200],[]), (267,[#1188],[]), (266,[#1187],[]), (265,[#1187],[]), (264,[#1177],[]), (263,[#1177],[]), (262,[#1176],[]), (261,[#1157],[]), (260,[#1141],[]), (259,[#1139],[]), (258,[#1120],[]), (257,[#1105],[]), (256,[#1097],[]), (255,[#1084],[]), (254,[#1083],[]), (253,[#1070],[]), (252,[#1046],[]), (251,[#1042],[]), (250,[#1041],[]), (249,[#1041],[]), (248,[#1038],[]), (247,[#1026],[]), (246,[#1026],[]), (245,[#1024],[]), (244,[#1006],[]), (243,[#1006],[]), (242,[#1004],[]), (241,[#1003],[]), (240,[#997],[]), (239,[#997],[]), (238,[#994],[]), (237,[#993],[]), (236,[#993],[]), (235,[#989],[]), (234,[#974],[]), (233,[#968],[]), (232,[#953],[]), (231,[#949],[]), (230,[#889],[]), (229,[#877],[]), (228,[#863],[]), (227,[#863],[]), (226,[#859],[]), (225,[#858],[]), (224,[#855],[]), (223,[#852],[]), (222,[#849],[]), (220,[#848],[]), (218,[#847],[]), (217,[#843],[]), (216,[#840],[]), (215,[#837],[]), (214,[#836],[]), (213,[#834],[]), (212,[#832],[]), (211,[#831],[]), (210,[#829],[]), (209,[#827],[]), (208,[#826],[]), (207,[#819],[]), (206,[#811],[]), (205,[#808],[]), (204,[#805],[]), (202,[#804],[]), (200,[#803],[]), (199,[#799],[]), (198,[#796],[]), (197,[#793],[]), (196,[#792],[]), (195,[#790],[]), (194,[#788],[]), (193,[#786],[]), (192,[#784],[]), (191,[#783],[]), (190,[#778],[]), (189,[#777],[]), (187,[#774],[]), (185,[#772],[]), (183,[#747],[]), (182,[#742],[]), (181,[#741],[]), (180,[#737],[]), (179,[#736],[]), (177,[#728],[]), (175,[#722],[]), (174,[#716],[]), (173,[#714],[]), (172,[#774],[]), (171,[#712],[]), (170,[#710],[]), (169,[#772],[]), (168,[#708],[]), (167,[#706],[]), (166,[#706],[]), (164,[#704],[]), (162,[#689],[]), (160,[#682],[]), (159,[#678],[]), (158,[#704],[]), (157,[#670],[]), (156,[#661],[]), (155,[#660],[]), (154,[#653],[]), (153,[#650],[]), (152,[#649],[]), (151,[#639],[]), (150,[#639],[]), (149,[#635],[]), (148,[#632],[]), (147,[#629],[]), (146,[#848, #804, #628, #562],[]), (145,[#628],[]), (144,[#847, #803, #627, #561],[]), (143,[#627],[]), (142,[#623],[]), (141,[#620],[]), (140,[#617],[]), (139,[#616],[]), (138,[#614],[]), (137,[#612],[]), (136,[#611],[]), (135,[#609],[]), (134,[#607],[]), (133,[#606],[]), (132,[#599],[]), (131,[#596],[]), (130,[#584],[]), (129,[#582],[]), (128,[#573],[]), (127,[#573],[]), (126,[#569],[]), (125,[#566],[]), (124,[#563],[]), (122,[#562],[]), (120,[#561],[]), (119,[#554],[]), (118,[#550],[]), (117,[#547],[]), (116,[#546],[]), (115,[#544],[]), (114,[#542],[]), (113,[#541],[]), (112,[#539],[]), (111,[#537],[]), (110,[#536],[]), (109,[#532],[]), (108,[#531],[]), (107,[#500],[]), (106,[#499],[]), (105,[#493],[]), (104,[#486],[]), (103,[#479],[]), (90,[],["main::16"]), (88,[],[]), (87,[],["logsch::15"]), (85,[],[]), (84,[#1169],[]), (83,[#1178],[]), (82,[],["uppol1::14"]), (80,[],[]), (79,[#1153],[]), (78,[#1151],[]), (77,[#1148],[]), (76,[#1164],[]), (75,[],["uppol2::13"]), (73,[],[]), (72,[#1115],[]), (71,[#1128],[]), (70,[#1113],[]), (69,[#1106],[]), (68,[#1135],[]), (67,[],["upzero::12"]), (65,[],[]), (64,[#1074],[]), (63,[#1056],[]), (62,[#1058],[]), (61,[],["scalel::11"]), (59,[],[]), (58,[#1044],[]), (57,[#1050],[]), (56,[],["logscl::10"]), (54,[],[]), (53,[#1017],[]), (52,[#1027],[]), (51,[],["quantl::9"]), (49,[],[]), (48,[#1009],[]), (47,[#991],[]), (46,[],["filtep::8"]), (44,[],[]), (43,[#972],[]), (42,[#977],[]), (41,[#981],[]), (40,[#985],[]), (39,[],["filtez::7"]), (37,[],[]), (36,[#961],[]), (35,[#957],[]), (34,[],["reset::6"]), (32,[],[]), (31,[],["decode::5"]), (29,[],[]), (28,[#884],[]), (27,[],["encode::4"]), (25,[],[]), (24,[#672],[]), (23,[#676],[]), (22,[],["my_cos::3"]), (20,[],[]), (19,[#529],[]), (18,[],["my_sin::2"]), (16,[],[]), (15,[#504],[]), (14,[],["my_fabs::1"]), (12,[],[]), (11,[#488],[]), (10,[],["my_abs::0"]), (8,[],[]), (7,[#481],[])};
END

RESULT NAME pointsto_relations
TYPE location = int(32);
     points_to = tuple(location, location);
     set(points_to)
DATA
program noflow {(270,271), (268,269), (265,266), (263,264), (249,250), (246,247), (243,244), (239,240), (236,237), (227,228), (220,146), (218,144), (202,146), (200,144), (187,172), (185,169), (183,167), (177,172), (175,169), (171,172), (168,169), (166,167), (164,158), (162,167), (160,158), (157,158), (150,151), (145,146), (143,144), (127,128), (122,146), (120,144), (90,88), (87,85), (82,80), (75,73), (67,65), (64,146), (63,144), (61,59), (56,54), (51,49), (46,44), (39,37), (36,144), (35,146), (34,32), (31,29), (27,25), (22,20), (18,16), (14,12), (10,8)};
END

RESULT NAME variable_locations
TYPE location = int(32);
     <tuple(funcid, int(32))>
     set(tuple(varid, location))
DATA
program noflow {(#704,164), (#706,166), (#650,153), (#596,131), (#774,187), (#772,185), (#741,181), (#736,179), (#710,170), (#714,173), (#531,108), (#629,147), (#653,154), (#616,139), (#649,152), (#639,150), (#863,227), (#628,145), (#627,143), (#1026,246), (#1041,249), (#635,149), (#620,141), (#623,142), (#607,134), (#606,133), (#609,135), (#617,140), (#612,137), (#611,136), (#614,138), (#1006,243), (#632,148), (#993,236), (#997,239), (#566,125), (#546,116), (#584,130), (#573,127), (#1177,263), (#547,117), (#532,109), (#569,126), (#563,124), (#599,132), (#537,111), (#542,114), (#778,190), (#561,120), (#562,122), (#550,118), (#554,119), (#536,110), (#539,112), (#541,113), (#544,115), (#858,225), (#777,189), (#808,205), (#852,223), (#837,215), (#848,220), (#847,218), (#827,209), (#826,208), (#829,210), (#849,222), (#877,229), (#836,214), (#831,211), (#834,213), (#832,212), (#840,216), (#843,217), (#859,226), (#855,224), (#793,197), (#811,206), (#804,202), (#803,200), (#805,204), (#788,194), (#790,195), (#796,198), (#799,199), (#784,192), (#819,207), (#792,196), (#783,191), (#786,193), (#481,7), (#479,103), (#488,11), (#486,104), (#504,15), (#499,106), (#493,105), (#500,107), (#529,19), (#676,23), (#672,24), (#678,159), (#689,162), (#670,157), (#682,160), (#660,155), (#661,156), (#582,129), (#884,28), (#716,174), (#742,182), (#737,180), (#747,183), (#712,171), (#728,177), (#708,168), (#722,175), (#889,230), (#957,35), (#961,36), (#953,232), (#949,231), (#985,40), (#981,41), (#977,42), (#972,43), (#968,233), (#974,234), (#991,47), (#1009,48), (#989,235), (#994,238), (#1003,241), (#1004,242), (#1027,52), (#1017,53), (#1024,245), (#1050,57), (#1044,58), (#1042,251), (#1046,252), (#1038,248), (#1058,62), (#1056,63), (#1074,64), (#1070,253), (#1083,254), (#1084,255), (#1135,68), (#1106,69), (#1113,70), (#1128,71), (#1115,72), (#1120,258), (#1105,257), (#1097,256), (#1164,76), (#1148,77), (#1151,78), (#1153,79), (#1157,261), (#1141,260), (#1139,259), (#1178,83), (#1169,84), (#1176,262), (#1188,267), (#1210,272), (#1215,273), (#1205,270), (#1200,268), (#1187,265)};
END

RESULT NAME callstrings
TYPE callsite = label;
     <tuple(funcid, int(32))>
     list(callsite)
DATA
END

RESULT NAME ASLs
TYPE string
DATA
END

RESULT NAME callsite_locations
TYPE location = int(32);
     location
DATA
END

END
