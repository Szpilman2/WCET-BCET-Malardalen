(program
 (annot
  ((alias_graph
    (((steens-var 0 "fac") (pair (steens-var 1 "") (steens-var 2 "")))
     ((steens-var 1 "") bot)
     ((steens-var 2 "") (lambda ((steens-var 99 "")) ((steens-var 75 ""))))
     ((steens-var 3 "var_10_2") (pair (steens-var 4 "") (steens-var 5 "")))
     ((steens-var 4 "") bot) ((steens-var 5 "") bot)
     ((steens-var 6 "main") (pair (steens-var 7 "") (steens-var 8 "")))
     ((steens-var 7 "") bot)
     ((steens-var 8 "") (lambda () ((steens-var 123 ""))))
     ((steens-var 9 "var_12_5") (pair (steens-var 10 "") (steens-var 11 "")))
     ((steens-var 10 "") bot) ((steens-var 11 "") bot)
     ((steens-var 12 "var_13_8") (pair (steens-var 13 "") (steens-var 14 "")))
     ((steens-var 13 "") bot) ((steens-var 14 "") bot)
     ((steens-var 15 "var_14_5") (pair (steens-var 16 "") (steens-var 17 "")))
     ((steens-var 16 "") bot) ((steens-var 17 "") bot)
     ((steens-var 18 "var_15_6") (pair (steens-var 19 "") (steens-var 20 "")))
     ((steens-var 19 "") bot) ((steens-var 20 "") bot)
     ((steens-var 21 "var_16_7") (pair (steens-var 22 "") (steens-var 23 "")))
     ((steens-var 22 "") bot) ((steens-var 23 "") bot)
     ((steens-var 24 "var_17_4") (pair (steens-var 25 "") (steens-var 26 "")))
     ((steens-var 25 "") bot) ((steens-var 26 "") bot)
     ((steens-var 27 "var_18_i") (pair (steens-var 28 "") (steens-var 29 "")))
     ((steens-var 28 "") bot) ((steens-var 29 "") bot)
     ((steens-var 30 "var_19_s") (pair (steens-var 31 "") (steens-var 32 "")))
     ((steens-var 31 "") bot) ((steens-var 32 "") bot)
     ((steens-var 33 "var_1_0") (pair (steens-var 34 "") (steens-var 35 "")))
     ((steens-var 34 "") bot) ((steens-var 35 "") bot)
     ((steens-var 36 "var_20_n") (pair (steens-var 37 "") (steens-var 38 "")))
     ((steens-var 37 "") bot) ((steens-var 38 "") bot)
     ((steens-var 39 "var_21_1") (pair (steens-var 40 "") (steens-var 41 "")))
     ((steens-var 40 "") bot) ((steens-var 41 "") bot)
     ((steens-var 42 "var_2_2") (pair (steens-var 43 "") (steens-var 44 "")))
     ((steens-var 43 "") bot) ((steens-var 44 "") bot)
     ((steens-var 45 "var_3_1") (pair (steens-var 46 "") (steens-var 47 "")))
     ((steens-var 46 "") bot) ((steens-var 47 "") bot)
     ((steens-var 48 "var_4_1") (pair (steens-var 49 "") (steens-var 50 "")))
     ((steens-var 49 "") bot) ((steens-var 50 "") bot)
     ((steens-var 51 "var_5_3") (pair (steens-var 52 "") (steens-var 53 "")))
     ((steens-var 52 "") bot) ((steens-var 53 "") bot)
     ((steens-var 54 "var_6_4") (pair (steens-var 55 "") (steens-var 56 "")))
     ((steens-var 55 "") bot) ((steens-var 56 "") bot)
     ((steens-var 57 "var_7_n") (pair (steens-var 58 "") (steens-var 59 "")))
     ((steens-var 58 "") bot) ((steens-var 59 "") bot)
     ((steens-var 60 "var_8_n") (pair (steens-var 61 "") (steens-var 62 "")))
     ((steens-var 61 "") bot) ((steens-var 62 "") bot)
     ((steens-var 63 "var_9_1") (pair (steens-var 64 "") (steens-var 65 "")))
     ((steens-var 64 "") bot) ((steens-var 65 "") bot)
     ((steens-var 66 "") (forw (steens-var 147 "")))
     ((steens-var 67 "") (forw (steens-var 148 "")))
     ((steens-var 68 "") (forw (steens-var 149 "")))
     ((steens-var 69 "") (pair (steens-var 70 "") (steens-var 71 "")))
     ((steens-var 70 "") bot) ((steens-var 71 "") bot)
     ((steens-var 72 "") (pair (steens-var 73 "") (steens-var 74 "")))
     ((steens-var 73 "") bot) ((steens-var 74 "") bot)
     ((steens-var 75 "") (forw (steens-var 78 "")))
     ((steens-var 76 "") (forw (steens-var 118 "")))
     ((steens-var 77 "") (forw (steens-var 119 "")))
     ((steens-var 78 "") (forw (steens-var 117 "")))
     ((steens-var 79 "") (forw (steens-var 118 "")))
     ((steens-var 80 "") (forw (steens-var 119 "")))
     ((steens-var 81 "") (pair (steens-var 82 "") (steens-var 83 "")))
     ((steens-var 82 "") (forw (steens-var 57 "var_7_n")))
     ((steens-var 83 "") bot)
     ((steens-var 84 "") (pair (steens-var 85 "") (steens-var 86 "")))
     ((steens-var 85 "") bot) ((steens-var 86 "") bot)
     ((steens-var 87 "") (pair (steens-var 88 "") (steens-var 89 "")))
     ((steens-var 88 "") (forw (steens-var 60 "var_8_n")))
     ((steens-var 89 "") bot)
     ((steens-var 90 "") (pair (steens-var 91 "") (steens-var 92 "")))
     ((steens-var 91 "") bot) ((steens-var 92 "") bot)
     ((steens-var 93 "") (pair (steens-var 94 "") (steens-var 95 "")))
     ((steens-var 94 "") (forw (steens-var 57 "var_7_n")))
     ((steens-var 95 "") bot)
     ((steens-var 96 "") (pair (steens-var 97 "") (steens-var 98 "")))
     ((steens-var 97 "") (forw (steens-var 60 "var_8_n")))
     ((steens-var 98 "") bot) ((steens-var 99 "") (forw (steens-var 66 "")))
     ((steens-var 100 "") (forw (steens-var 67 "")))
     ((steens-var 101 "") (forw (steens-var 68 "")))
     ((steens-var 102 "") (pair (steens-var 103 "") (steens-var 104 "")))
     ((steens-var 103 "") (forw (steens-var 3 "var_10_2")))
     ((steens-var 104 "") bot)
     ((steens-var 105 "") (pair (steens-var 106 "") (steens-var 107 "")))
     ((steens-var 106 "") bot) ((steens-var 107 "") bot)
     ((steens-var 108 "") (pair (steens-var 109 "") (steens-var 110 "")))
     ((steens-var 109 "") (forw (steens-var 60 "var_8_n")))
     ((steens-var 110 "") bot)
     ((steens-var 111 "") (pair (steens-var 112 "") (steens-var 113 "")))
     ((steens-var 112 "") (forw (steens-var 3 "var_10_2")))
     ((steens-var 113 "") bot)
     ((steens-var 114 "") (pair (steens-var 115 "") (steens-var 116 "")))
     ((steens-var 115 "") bot) ((steens-var 116 "") bot)
     ((steens-var 117 "") (pair (steens-var 76 "") (steens-var 77 "")))
     ((steens-var 118 "") bot) ((steens-var 119 "") bot)
     ((steens-var 120 "") (pair (steens-var 121 "") (steens-var 122 "")))
     ((steens-var 121 "") bot) ((steens-var 122 "") bot)
     ((steens-var 123 "") (pair (steens-var 124 "") (steens-var 125 "")))
     ((steens-var 124 "") bot) ((steens-var 125 "") bot)
     ((steens-var 126 "") (pair (steens-var 127 "") (steens-var 128 "")))
     ((steens-var 127 "") (forw (steens-var 30 "var_19_s")))
     ((steens-var 128 "") bot)
     ((steens-var 129 "") (pair (steens-var 130 "") (steens-var 131 "")))
     ((steens-var 130 "") bot) ((steens-var 131 "") bot)
     ((steens-var 132 "") (pair (steens-var 133 "") (steens-var 134 "")))
     ((steens-var 133 "") (forw (steens-var 36 "var_20_n")))
     ((steens-var 134 "") bot)
     ((steens-var 135 "") (pair (steens-var 136 "") (steens-var 137 "")))
     ((steens-var 136 "") bot) ((steens-var 137 "") bot)
     ((steens-var 138 "") (pair (steens-var 139 "") (steens-var 140 "")))
     ((steens-var 139 "") (forw (steens-var 27 "var_18_i")))
     ((steens-var 140 "") bot)
     ((steens-var 141 "") (pair (steens-var 142 "") (steens-var 143 "")))
     ((steens-var 142 "") bot) ((steens-var 143 "") bot)
     ((steens-var 144 "") (pair (steens-var 145 "") (steens-var 146 "")))
     ((steens-var 145 "") (forw (steens-var 27 "var_18_i")))
     ((steens-var 146 "") bot)
     ((steens-var 147 "") (pair (steens-var 100 "") (steens-var 101 "")))
     ((steens-var 148 "") bot) ((steens-var 149 "") bot)
     ((steens-var 150 "") (pair (steens-var 151 "") (steens-var 152 "")))
     ((steens-var 151 "") (forw (steens-var 39 "var_21_1")))
     ((steens-var 152 "") bot)
     ((steens-var 153 "") (pair (steens-var 154 "") (steens-var 155 "")))
     ((steens-var 154 "") bot) ((steens-var 155 "") bot)
     ((steens-var 156 "") (pair (steens-var 157 "") (steens-var 158 "")))
     ((steens-var 157 "") (forw (steens-var 30 "var_19_s")))
     ((steens-var 158 "") bot)
     ((steens-var 159 "") (pair (steens-var 160 "") (steens-var 161 "")))
     ((steens-var 160 "") bot) ((steens-var 161 "") bot)
     ((steens-var 162 "") (pair (steens-var 163 "") (steens-var 164 "")))
     ((steens-var 163 "") (forw (steens-var 30 "var_19_s")))
     ((steens-var 164 "") bot)
     ((steens-var 165 "") (pair (steens-var 166 "") (steens-var 167 "")))
     ((steens-var 166 "") (forw (steens-var 39 "var_21_1")))
     ((steens-var 167 "") bot)
     ((steens-var 168 "") (pair (steens-var 169 "") (steens-var 170 "")))
     ((steens-var 169 "") (forw (steens-var 27 "var_18_i")))
     ((steens-var 170 "") bot)
     ((steens-var 171 "") (pair (steens-var 172 "") (steens-var 173 "")))
     ((steens-var 172 "") bot) ((steens-var 173 "") bot)
     ((steens-var 174 "") (pair (steens-var 175 "") (steens-var 176 "")))
     ((steens-var 175 "") (forw (steens-var 27 "var_18_i")))
     ((steens-var 176 "") bot)
     ((steens-var 177 "") (pair (steens-var 178 "") (steens-var 179 "")))
     ((steens-var 178 "") (forw (steens-var 30 "var_19_s")))
     ((steens-var 179 "") bot)))))
 (symbol_manager
  (((symbol "$0_fac" 32) (annot ((external_name (export "fac")))))
   ((symbol "$10_2" 32) (annot ((source_representation "2"))))
   ((symbol "$11_main" 32) (annot ((external_name (export "main")))))
   ((symbol "$12_5" 32) (annot ())) ((symbol "$13_8" 32) (annot ()))
   ((symbol "$14_5" 32) (annot ())) ((symbol "$15_6" 32) (annot ()))
   ((symbol "$16_7" 32) (annot ())) ((symbol "$17_4" 32) (annot ()))
   ((symbol "$18_i" 32) (annot ((source_representation "i"))))
   ((symbol "$19_s" 32) (annot ((source_representation "s"))))
   ((symbol "$1_0" 32) (annot ()))
   ((symbol "$20_n" 32) (annot ((source_representation "n"))))
   ((symbol "$21_1" 32) (annot ((source_representation "1"))))
   ((symbol "$2_2" 32) (annot ())) ((symbol "$3_1" 32) (annot ()))
   ((symbol "$4_1" 32) (annot ())) ((symbol "$5_3" 32) (annot ()))
   ((symbol "$6_4" 32) (annot ())) ((symbol "$7_n" 32) (annot ()))
   ((symbol "$8_n" 32) (annot ()))
   ((symbol "$9_1" 32) (annot ((source_representation "1"))))))
 (function_manager
  ((((space spc 32) (const_symbolic (symbol "$0_fac" 32))) 0
    (annot ((alias_var (steens-var 0 "fac")))) root)
   (((space spc 32) (const_symbolic (symbol "$11_main" 32))) 1
    (annot ((alias_var (steens-var 6 "main")))) main))) (mem_init ())
 (function_list
  ((0
    (function (annot ())
     (register_manager
      (((register 0 32) (annot ((alias_var (steens-var 66 "")))))
       ((register 1 32) (annot ((alias_var (steens-var 69 "")))))
       ((register 2 32) (annot ((alias_var (steens-var 72 "")))))
       ((register 3 32) (annot ((alias_var (steens-var 75 "")))))))
     (frame_layout
      ((((stack stk 32) (const_symbolic (symbol "$10_2" 32)))
        ((annot ((alias_var (steens-var 3 "var_10_2")))) 32))
       (((stack stk 32) (const_symbolic (symbol "$7_n" 32)))
        ((annot ((alias_var (steens-var 57 "var_7_n")))) 32))
       (((stack stk 32) (const_symbolic (symbol "$8_n" 32)))
        ((annot ((alias_var (steens-var 60 "var_8_n")))) 32))
       (((stack stk 32) (const_symbolic (symbol "$9_1" 32)))
        ((annot ((alias_var (steens-var 63 "var_9_1")))) 32))))
     (flowgraph (annot ())
      ((0
        (node (annot ((flow_fact_name "BB0")))
         (stmt_enter (annot ()) () ((register 0 32)))))
       (1
        (node (annot ((flow_fact_name "BB1")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$7_n" 32)))
          (expr_use (annot ()) (register 0 32)))))
       (2
        (node (annot ((flow_fact_name "BB2")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$8_n" 32)))
          (expr_load (annot ()) (space spc 32) 32
           (expr_rel (annot ()) (stack stk 32)
            (const_symbolic (symbol "$7_n" 32)))))))
       (3
        (node (annot ((flow_fact_name "BB3")))
         (stmt_branch (annot ((comment (".lni target$2_2"))))
          (expr_op (annot ()) (operator cmp_ne 1 (32 32))
           ((expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$8_n" 32))))
            (expr_imm (annot ((source_representation "0")))
             (const_known (bits "00000000" 32))))))))
       (4
        (node (annot ((flow_fact_name "BB4")))
         (stmt_def (annot ()) (register 1 32)
          (expr_imm (annot ((source_representation "1")))
           (const_known (bits "00000001" 32))))))
       (5
        (node (annot ((flow_fact_name "BB5")))
         (stmt_null (annot ((comment (".lni target$4_1")))))))
       (6
        (node (annot ((flow_fact_name "BB6")))
         (stmt_null (annot ((comment (".lni label: $2_2")))))))
       (7
        (node (annot ((flow_fact_name "BB7")))
         (stmt_def (annot ()) (register 2 32)
          (expr_op (annot ()) (operator sub 32 (32 32))
           ((expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$8_n" 32))))
            (expr_imm (annot ((source_representation "1")))
             (const_known (bits "00000001" 32))))))))
       (8
        (node (annot ((flow_fact_name "BB8")))
         (stmt_call (annot ()) (space spc 32)
          (expr_imm (annot ()) (const_symbolic (symbol "$0_fac" 32)))
          ((expr_use (annot ()) (register 2 32))))))
       (9
        (node (annot ((flow_fact_name "BB9")))
         (stmt_result (annot ()) ((register 3 32)))))
       (10
        (node (annot ((flow_fact_name "BB10")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$10_2" 32)))
          (expr_use (annot ()) (register 3 32)))))
       (11
        (node (annot ((flow_fact_name "BB11")))
         (stmt_def (annot ()) (register 1 32)
          (expr_op (annot ()) (operator s_mul 32 (32 32))
           ((expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$8_n" 32))))
            (expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$10_2" 32)))))))))
       (12
        (node (annot ((flow_fact_name "BB12")))
         (stmt_null (annot ((comment (".lni label: $4_1")))))))
       (13
        (node (annot ((flow_fact_name "BB13")))
         (stmt_return (annot ()) () ((expr_use (annot ()) (register 1 32)))))))
      ((0 (edge (annot ()) 0 start 0)) (1 (edge (annot ()) 0 13 end))
       (2 (edge (annot ()) 0 0 1)) (3 (edge (annot ()) 0 1 2))
       (4 (edge (annot ()) 0 2 3)) (5 (edge (annot ()) 0 3 4))
       (6 (edge (annot ()) 0 4 5)) (7 (edge (annot ()) 0 6 7))
       (8 (edge (annot ()) 0 7 8)) (9 (edge (annot ()) 0 8 9))
       (10 (edge (annot ()) 0 9 10)) (11 (edge (annot ()) 0 10 11))
       (12 (edge (annot ()) 0 11 12)) (13 (edge (annot ()) 0 12 13))
       (14 (edge (annot ()) 0 5 12)) (15 (edge (annot ()) 1 3 6))))))
   (1
    (function (annot ())
     (register_manager
      (((register 0 32) (annot ((alias_var (steens-var 114 "")))))
       ((register 1 32) (annot ((alias_var (steens-var 117 "")))))
       ((register 2 32) (annot ((alias_var (steens-var 120 "")))))))
     (frame_layout
      ((((stack stk 32) (const_symbolic (symbol "$18_i" 32)))
        ((annot ((alias_var (steens-var 27 "var_18_i")))) 32))
       (((stack stk 32) (const_symbolic (symbol "$19_s" 32)))
        ((annot ((alias_var (steens-var 30 "var_19_s")))) 32))
       (((stack stk 32) (const_symbolic (symbol "$20_n" 32)))
        ((annot ((alias_var (steens-var 36 "var_20_n")))) 32))
       (((stack stk 32) (const_symbolic (symbol "$21_1" 32)))
        ((annot ((alias_var (steens-var 39 "var_21_1")))) 32))))
     (flowgraph (annot ())
      ((0
        (node (annot ((flow_fact_name "BB14"))) (stmt_enter (annot ()) () ())))
       (1
        (node (annot ((flow_fact_name "BB15")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$19_s" 32)))
          (expr_imm (annot ((source_representation "0")))
           (const_known (bits "00000000" 32))))))
       (2
        (node (annot ((flow_fact_name "BB16")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$20_n" 32)))
          (expr_imm (annot ((source_representation "5")))
           (const_known (bits "00000005" 32))))))
       (3
        (node (annot ((flow_fact_name "BB17")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$18_i" 32)))
          (expr_imm (annot ((source_representation "0")))
           (const_known (bits "00000000" 32))))))
       (4
        (node (annot ((flow_fact_name "BB18")))
         (stmt_null (annot ((comment (".lni target$13_8")))))))
       (5
        (node (annot ((flow_fact_name "BB19")))
         (stmt_null (annot ((comment (".lni label: $14_5")))))))
       (6
        (node (annot ((flow_fact_name "BB20")))
         (stmt_def (annot ()) (register 0 32)
          (expr_load (annot ()) (space spc 32) 32
           (expr_rel (annot ()) (stack stk 32)
            (const_symbolic (symbol "$18_i" 32)))))))
       (7
        (node (annot ((flow_fact_name "BB21")))
         (stmt_call (annot ()) (space spc 32)
          (expr_imm (annot ()) (const_symbolic (symbol "$0_fac" 32)))
          ((expr_use (annot ()) (register 0 32))))))
       (8
        (node (annot ((flow_fact_name "BB22")))
         (stmt_result (annot ()) ((register 1 32)))))
       (9
        (node (annot ((flow_fact_name "BB23")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$21_1" 32)))
          (expr_use (annot ()) (register 1 32)))))
       (10
        (node (annot ((flow_fact_name "BB24")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$19_s" 32)))
          (expr_op (annot ()) (operator add 32 (32 32))
           ((expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$19_s" 32))))
            (expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$21_1" 32)))))))))
       (11
        (node (annot ((flow_fact_name "BB25")))
         (stmt_null (annot ((comment (".lni label: $15_6")))))))
       (12
        (node (annot ((flow_fact_name "BB26")))
         (stmt_store (annot ()) (space spc 32)
          (expr_rel (annot ()) (stack stk 32)
           (const_symbolic (symbol "$18_i" 32)))
          (expr_op (annot ()) (operator add 32 (32 32))
           ((expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$18_i" 32))))
            (expr_imm (annot ((source_representation "1")))
             (const_known (bits "00000001" 32))))))))
       (13
        (node (annot ((flow_fact_name "BB27")))
         (stmt_null (annot ((comment (".lni label: $13_8")))))))
       (14
        (node (annot ((flow_fact_name "BB28")))
         (stmt_branch (annot ((comment (".lni target$14_5"))))
          (expr_op (annot ()) (operator s_cmp_le 1 (32 32))
           ((expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$18_i" 32))))
            (expr_load (annot ()) (space spc 32) 32
             (expr_rel (annot ()) (stack stk 32)
              (const_symbolic (symbol "$20_n" 32)))))))))
       (15
        (node (annot ((flow_fact_name "BB29")))
         (stmt_def (annot ()) (register 2 32)
          (expr_load (annot ()) (space spc 32) 32
           (expr_rel (annot ()) (stack stk 32)
            (const_symbolic (symbol "$19_s" 32)))))))
       (16
        (node (annot ((flow_fact_name "BB30")))
         (stmt_null (annot ((comment (".lni label: $17_4")))))))
       (17
        (node (annot ((flow_fact_name "BB31")))
         (stmt_return (annot ()) () ((expr_use (annot ()) (register 2 32)))))))
      ((0 (edge (annot ()) 0 start 0)) (1 (edge (annot ()) 0 17 end))
       (2 (edge (annot ()) 0 0 1)) (3 (edge (annot ()) 0 1 2))
       (4 (edge (annot ()) 0 2 3)) (5 (edge (annot ()) 0 3 4))
       (6 (edge (annot ()) 0 5 6)) (7 (edge (annot ()) 0 6 7))
       (8 (edge (annot ()) 0 7 8)) (9 (edge (annot ()) 0 8 9))
       (10 (edge (annot ()) 0 9 10)) (11 (edge (annot ()) 0 10 11))
       (12 (edge (annot ()) 0 11 12)) (13 (edge (annot ()) 0 12 13))
       (14 (edge (annot ()) 0 13 14)) (15 (edge (annot ()) 0 14 15))
       (16 (edge (annot ()) 0 15 16)) (17 (edge (annot ()) 0 16 17))
       (18 (edge (annot ()) 0 4 13)) (19 (edge (annot ()) 1 14 5)))))))))