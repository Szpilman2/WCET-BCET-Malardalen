ANALYSIS
IDMAP
map(label, string): {default->"" \ @2->"main::1", @14->"alf_label_11", @16->"alf_label_8", @21->"alf_label_9", @17->"alf_label_7", @24->"alf_label_6", @0->"fac::0", @6->"alf_label_0", @9->"alf_label_4", @10->"alf_label_3", @7->"alf_label_1"};

map(varid, string): {default->"" \ #13->"i::13", #0->"n::0", #14->"n::14", #11->"s::11"};

RESULT NAME interval
TYPE <tuple(funcid, int(32))>
     map(varid, tuple(lift(int(32)), lift(int(32))))
DATA
END

RESULT NAME pointsto_locations
TYPE location = int(32);
     funcname = string;
     set(tuple(location, list(varid), list(funcname)))
DATA
program noflow {(16,[#14],[]), (15,[#13],[]), (14,[#11],[]), (13,[],["main::1"]), (11,[],[]), (10,[],["fac::0"]), (8,[],[]), (7,[#0],[])};
END

RESULT NAME pointsto_relations
TYPE location = int(32);
     points_to = tuple(location, location);
     set(points_to)
DATA
program noflow {(13,11), (10,8)};
END

RESULT NAME variable_locations
TYPE location = int(32);
     <tuple(funcid, int(32))>
     set(tuple(varid, location))
DATA
program noflow {(#0,7), (#13,15), (#11,14), (#14,16)};
END

RESULT NAME callstrings
TYPE callsite = label;
     <tuple(funcid, int(32))>
     list(callsite)
DATA
END

RESULT NAME ASLs
TYPE string
DATA
END

RESULT NAME callsite_locations
TYPE location = int(32);
     location
DATA
END

END
