ANALYSIS
IDMAP
map(label, string): {default->"" \ @16->"main::8", @192->"alf_label_107", @196->"alf_label_106", @208->"alf_label_105", @216->"alf_label_104", @224->"alf_label_103", @231->"alf_label_102", @238->"alf_label_101", @246->"alf_label_100", @253->"alf_label_99", @14->"jpegdct::7", @151->"alf_label_67", @155->"alf_label_69", @158->"alf_label_94", @159->"alf_label_93", @160->"alf_label_92", @161->"alf_label_91", @162->"alf_label_90", @163->"alf_label_89", @164->"alf_label_88", @165->"alf_label_87", @166->"alf_label_86", @167->"alf_label_85", @168->"alf_label_84", @169->"alf_label_83", @170->"alf_label_82", @171->"alf_label_81", @172->"alf_label_80", @173->"alf_label_79", @174->"alf_label_78", @175->"alf_label_77", @176->"alf_label_76", @177->"alf_label_75", @179->"alf_label_71", @182->"alf_label_73", @183->"alf_label_72", @180->"alf_label_70", @156->"alf_label_68", @152->"alf_label_66", @12->"codebook::6", @141->"alf_label_65", @143->"alf_label_63", @144->"alf_label_62", @146->"alf_label_61", @10->"iir1::5", @125->"alf_label_60", @127->"alf_label_52", @130->"alf_label_58", @131->"alf_label_57", @132->"alf_label_56", @133->"alf_label_55", @134->"alf_label_54", @135->"alf_label_53", @128->"alf_label_51", @136->"alf_label_50", @8->"latsynth::4", @114->"alf_label_49", @115->"alf_label_48", @117->"alf_label_44", @120->"alf_label_46", @121->"alf_label_45", @118->"alf_label_43", @122->"alf_label_42", @6->"fir_no_red_ld::3", @85->"alf_label_23", @88->"alf_label_39", @89->"alf_label_38", @91->"alf_label_28", @94->"alf_label_36", @95->"alf_label_35", @96->"alf_label_34", @97->"alf_label_33", @98->"alf_label_32", @99->"alf_label_31", @100->"alf_label_30", @101->"alf_label_29", @92->"alf_label_27", @102->"alf_label_26", @103->"alf_label_25", @104->"alf_label_24", @86->"alf_label_22", @4->"fir::2", @70->"alf_label_13", @73->"alf_label_19", @75->"alf_label_16", @78->"alf_label_17", @76->"alf_label_15", @79->"alf_label_14", @71->"alf_label_12", @2->"mac::1", @57->"alf_label_11", @58->"alf_label_10", @60->"alf_label_6", @63->"alf_label_8", @64->"alf_label_7", @61->"alf_label_5", @0->"vec_mpy1::0", @51->"alf_label_1", @54->"alf_label_2", @52->"alf_label_0"};

map(varid, string): {default->"" \ #2147483647->"a::2147483647", #36->"a::36", #458->"a::458", #2147483647->"array1::2147483647", #61->"array1::61", #137->"b::137", #2147483647->"b::2147483647", #30->"b::30", #460->"b::460", #2147483647->"bitchanged::2147483647", #221->"bitchanged::221", #476->"c::476", #2147483647->"codeword::2147483647", #579->"codeword::579", #2147483647->"coeff::2147483647", #65->"coeff::65", #183->"coefs::183", #2147483647->"coefs::2147483647", #2147483647->"d::2147483647", #262->"d::262", #466->"d::466", #580->"d::580", #2147483647->"ddim::2147483647", #581->"ddim::581", #24->"dotp::24", #461->"e::461", #135->"f::135", #2147483647->"f::2147483647", #2147483647->"g::2147483647", #216->"g::216", #118->"h0::118", #99->"h1::99", #109->"h::109", #2147483647->"h::2147483647", #0->"i::0", #143->"i::143", #26->"i::26", #266->"i::266", #43->"i::43", #91->"i::91", #212->"input::212", #2147483647->"input::2147483647", #218->"j::218", #435->"j::435", #56->"j::56", #72->"j::72", #153->"k::153", #2147483647->"k::2147483647", #229->"k::229", #236->"m::236", #2147483647->"mask::2147483647", #226->"mask::226", #145->"n::145", #177->"n::177", #2147483647->"n::2147483647", #241->"n::241", #2147483647->"numbasis::2147483647", #219->"numbasis::219", #172->"optr::172", #2147483647->"optr::2147483647", #2147483647->"output::2147483647", #480->"output::480", #51->"output::51", #248->"p::248", #2147483647->"r::2147483647", #277->"r::277", #10->"scaler::10", #2147483647->"scaler::2147483647", #20->"sqr::20", #2147483647->"sqr::2147483647", #181->"state::181", #2147483647->"state::2147483647", #88->"sum0::88", #84->"sum1::84", #2147483647->"sum::2147483647", #22->"sum::22", #53->"sum::53", #187->"t::187", #275->"t::275", #2147483647->"theta::2147483647", #582->"theta::582", #225->"tmpMask::225", #97->"x0::97", #104->"x1::104", #113->"x::113", #12->"x::12", #175->"x::175", #2147483647->"x::2147483647", #2147483647->"y::2147483647", #79->"y::79", #8->"y::8"};

RESULT NAME interval
TYPE <tuple(funcid, int(32))>
     map(varid, tuple(lift(int(32)), lift(int(32))))
DATA
END

RESULT NAME pointsto_locations
TYPE location = int(32);
     funcname = string;
     set(tuple(location, list(varid), list(funcname)))
DATA
program noflow {(121,[#480, #79, #51],[]), (120,[#480],[]), (119,[#476],[]), (118,[#466],[]), (117,[#461],[]), (116,[#461],[]), (115,[#460, #153, #109, #65, #12],[]), (114,[#460],[]), (113,[#458, #137, #113, #61, #8],[]), (112,[#458],[]), (111,[#435],[]), (109,[#275],[]), (108,[#275],[]), (107,[#266],[]), (105,[#248],[]), (104,[#241],[]), (103,[#236],[]), (102,[#229],[]), (101,[#225],[]), (100,[#218],[]), (98,[#187],[]), (95,[#177],[]), (94,[#175],[]), (92,[#143],[]), (91,[#118],[]), (90,[#104],[]), (89,[#99],[]), (88,[#97],[]), (87,[#91],[]), (86,[#88],[]), (85,[#84],[]), (84,[#72],[]), (83,[#56],[]), (82,[#53],[]), (81,[#43],[]), (78,[#26],[]), (77,[#24],[]), (75,[#0],[]), (64,[],["main::8"]), (62,[],[]), (61,[],["jpegdct::7"]), (59,[],[]), (58,[#277],[]), (57,[#262],[]), (56,[],["codebook::6"]), (54,[],[]), (53,[#582],[]), (52,[#581],[]), (51,[#580],[]), (50,[#216],[]), (49,[#579],[]), (48,[#219],[]), (47,[#221],[]), (46,[#226],[]), (45,[],["iir1::5"]), (43,[],[]), (42,[#181],[]), (41,[#172],[]), (40,[#212],[]), (39,[#183],[]), (38,[],["latsynth::4"]), (36,[],[]), (35,[#135],[]), (34,[#145],[]), (33,[#153],[]), (32,[#137],[]), (31,[],["fir_no_red_ld::3"]), (29,[],[]), (28,[#79],[]), (27,[#109],[]), (26,[#113],[]), (25,[],["fir::2"]), (23,[],[]), (22,[#51],[]), (21,[#65],[]), (20,[#61],[]), (19,[],["mac::1"]), (17,[],[]), (16,[#22],[]), (15,[#20],[]), (14,[#30],[]), (13,[#36],[]), (12,[],["vec_mpy1::0"]), (10,[],[]), (9,[#10],[]), (8,[#12],[]), (7,[#8],[])};
END

RESULT NAME pointsto_relations
TYPE location = int(32);
     points_to = tuple(location, location);
     set(points_to)
DATA
program noflow {(120,121), (116,117), (114,115), (112,113), (108,109), (77,121), (64,62), (61,59), (58,115), (57,113), (56,54), (51,113), (45,43), (42,121), (41,121), (40,115), (39,113), (38,36), (33,115), (32,113), (31,29), (28,121), (27,115), (26,113), (25,23), (22,121), (21,115), (20,113), (19,17), (16,120), (14,115), (13,113), (12,10), (8,115), (7,113)};
END

RESULT NAME variable_locations
TYPE location = int(32);
     <tuple(funcid, int(32))>
     set(tuple(varid, location))
DATA
program noflow {(#8,7), (#12,8), (#10,9), (#0,75), (#36,13), (#30,14), (#20,15), (#22,16), (#26,78), (#24,77), (#61,20), (#65,21), (#51,22), (#43,81), (#56,83), (#53,82), (#113,26), (#109,27), (#79,28), (#91,87), (#72,84), (#88,86), (#84,85), (#97,88), (#104,90), (#118,91), (#99,89), (#137,32), (#153,33), (#145,34), (#135,35), (#143,92), (#183,39), (#212,40), (#172,41), (#181,42), (#175,94), (#187,98), (#177,95), (#226,46), (#221,47), (#219,48), (#579,49), (#216,50), (#580,51), (#581,52), (#582,53), (#218,100), (#225,101), (#262,57), (#277,58), (#275,108), (#266,107), (#435,111), (#229,102), (#236,103), (#241,104), (#248,105), (#458,112), (#460,114), (#476,119), (#480,120), (#466,118), (#461,116)};
END

RESULT NAME callstrings
TYPE callsite = label;
     <tuple(funcid, int(32))>
     list(callsite)
DATA
END

RESULT NAME ASLs
TYPE string
DATA
END

RESULT NAME callsite_locations
TYPE location = int(32);
     location
DATA
END

END
