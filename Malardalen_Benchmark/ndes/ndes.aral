ANALYSIS
IDMAP
map(label, string): {default->"" \ @8->"main::4", @245->"alf_label_110", @252->"alf_label_109", @255->"alf_label_108", @256->"alf_label_107", @257->"alf_label_106", @258->"alf_label_105", @259->"alf_label_104", @260->"alf_label_103", @6->"cyfun::3", @185->"alf_label_99", @188->"alf_label_100", @186->"alf_label_98", @189->"alf_label_97", @190->"alf_label_96", @192->"alf_label_89", @195->"alf_label_94", @196->"alf_label_93", @197->"alf_label_92", @198->"alf_label_91", @199->"alf_label_90", @193->"alf_label_88", @200->"alf_label_87", @202->"alf_label_81", @205->"alf_label_85", @206->"alf_label_84", @207->"alf_label_83", @208->"alf_label_82", @203->"alf_label_80", @209->"alf_label_79", @210->"alf_label_78", @211->"alf_label_77", @212->"alf_label_76", @213->"alf_label_75", @215->"alf_label_70", @218->"alf_label_73", @219->"alf_label_72", @220->"alf_label_71", @216->"alf_label_69", @221->"alf_label_68", @222->"alf_label_67", @4->"ks::2", @144->"alf_label_61", @151->"alf_label_64", @158->"alf_label_63", @165->"alf_label_62", @145->"alf_label_60", @168->"alf_label_59", @170->"alf_label_51", @174->"alf_label_55", @177->"alf_label_57", @178->"alf_label_56", @175->"alf_label_54", @171->"alf_label_53", @172->"alf_label_52", @2->"getbit::1", @139->"alf_label_47", @141->"alf_label_49", @140->"alf_label_48", @0->"des::0", @25->"alf_label_42", @32->"alf_label_44", @39->"alf_label_43", @26->"alf_label_41", @42->"alf_label_40", @43->"alf_label_39", @44->"alf_label_38", @45->"alf_label_37", @47->"alf_label_30", @50->"alf_label_35", @51->"alf_label_34", @52->"alf_label_33", @57->"alf_label_32", @60->"alf_label_31", @48->"alf_label_29", @62->"alf_label_25", @69->"alf_label_27", @76->"alf_label_26", @63->"alf_label_24", @79->"alf_label_23", @81->"alf_label_8", @83->"alf_label_17", @86->"alf_label_20", @90->"alf_label_19", @93->"alf_label_18", @84->"alf_label_16", @95->"alf_label_12", @102->"alf_label_14", @109->"alf_label_13", @96->"alf_label_11", @112->"alf_label_10", @113->"alf_label_9", @115->"alf_label_0", @117->"alf_label_4", @120->"alf_label_5", @118->"alf_label_3", @121->"alf_label_2", @122->"alf_label_1"};

map(varid, string): {default->"" \ #435->"bit::435", #2147483647->"bitno::2147483647", #455->"bitno::455", #502->"c::502", #367->"i::367", #543->"i::543", #572->"ibin::572", #362->"ic::362", #410->"icd::410", #579->"icol::579", #630->"ie::630", #603->"iec::603", #662->"iet::662", #618->"ietmp1::618", #616->"ietmp2::616", #374->"ii::374", #430->"initflag::430", #2147483647->"inp::2147483647", #386->"inp::386", #863->"inp::863", #2147483647->"iout::2147483647", #551->"iout::551", #387->"ip::387", #417->"ipc1::417", #499->"ipc2::499", #345->"ipm::345", #555->"ipp::555", #2147483647->"ir::2147483647", #665->"ir::665", #581->"irow::581", #578->"is::578", #573->"iss::573", #2147483647->"isw::2147483647", #377->"isw::377", #868->"isw::868", #343->"itmp::343", #558->"itmp::558", #325->"j::325", #476->"j::476", #547->"j::547", #567->"jj::567", #2147483647->"k::2147483647", #328->"k::328", #479->"k::479", #644->"k::644", #2147483647->"key::2147483647", #416->"key::416", #864->"key::864", #2147483647->"kn::2147483647", #490->"kn::490", #373->"kns::373", #336->"l::336", #482->"l::482", #491->"l::491", #652->"l::652", #610->"m::610", #2147483647->"n::2147483647", #525->"n::525", #2147483647->"nbits::2147483647", #456->"nbits::456", #2147483647->"newkey::2147483647", #398->"newkey::398", #865->"newkey::865", #2147483647->"out::2147483647", #335->"out::335", #870->"out::870", #554->"p::554", #402->"pg::402", #349->"r::349", #512->"r::512", #437->"shifter::437", #2147483647->"source::2147483647", #460->"source::460", #872->"value::872"};

RESULT NAME interval
TYPE <tuple(funcid, int(32))>
     map(varid, tuple(lift(int(32)), lift(int(32))))
DATA
END

RESULT NAME pointsto_locations
TYPE location = int(32);
     funcname = string;
     set(tuple(location, list(varid), list(funcname)))
DATA
program noflow {(212,[#349],[]), (211,[#336],[]), (210,[#349],[]), (209,[#336],[]), (208,[#872],[]), (207,[#349],[]), (206,[#336],[]), (204,[#870],[]), (203,[#868],[]), (201,[#865],[]), (200,[#864],[]), (199,[#863],[]), (114,[#662],[]), (113,[#662],[]), (112,[#652],[]), (111,[#512],[]), (110,[#502],[]), (109,[#491],[]), (108,[#512],[]), (107,[#502],[]), (106,[#491],[]), (105,[#630],[]), (104,[#618],[]), (103,[#616],[]), (102,[#610],[]), (101,[#603],[]), (100,[#603],[]), (99,[#581],[]), (98,[#579],[]), (97,[#578],[]), (96,[],[]), (95,[],[]), (94,[#578],[]), (93,[#573],[]), (92,[#572],[]), (91,[#572],[]), (90,[#567],[]), (89,[#558],[]), (87,[#555],[]), (86,[#555],[]), (85,[#554],[]), (84,[#547],[]), (83,[#543],[]), (82,[#499],[]), (81,[#499],[]), (80,[#512],[]), (79,[#502],[]), (78,[#491],[]), (77,[#482],[]), (76,[#479],[]), (75,[#476],[]), (74,[#349],[]), (73,[#336],[]), (70,[#437],[]), (69,[#435],[]), (68,[#435],[]), (67,[#430],[]), (66,[#417],[]), (65,[#417],[]), (64,[#349],[]), (63,[#336],[]), (62,[#410],[]), (60,[#402],[]), (58,[#387],[]), (57,[#387],[]), (54,[#512],[]), (53,[#502],[]), (52,[#491],[]), (51,[#374],[]), (50,[#373],[]), (49,[#373],[]), (48,[#367],[]), (47,[#362],[]), (46,[#349],[]), (45,[#336],[]), (44,[#345],[]), (43,[#345],[]), (42,[#343],[]), (41,[#349],[]), (40,[#336],[]), (38,[#328],[]), (37,[#325],[]), (34,[],["main::4"]), (32,[],[]), (31,[],["cyfun::3"]), (29,[],[]), (28,[#551],[]), (27,[#644],[]), (26,[#665],[]), (25,[],["ks::2"]), (23,[],[]), (22,[#490],[]), (21,[#525],[]), (20,[],["getbit::1"]), (18,[],[]), (17,[#456],[]), (16,[#455],[]), (15,[#460],[]), (14,[],["des::0"]), (12,[],[]), (11,[#335],[]), (10,[#377],[]), (9,[#398],[]), (8,[#416],[]), (7,[#386],[])};
END

RESULT NAME pointsto_relations
TYPE location = int(32);
     points_to = tuple(location, location);
     set(points_to)
DATA
program noflow {(113,114), (100,101), (96,97), (95,96), (94,95), (91,92), (86,87), (85,69), (81,82), (68,69), (65,66), (57,58), (49,50), (43,44), (34,32), (31,29), (28,47), (25,23), (22,60), (20,18), (14,12), (11,204), (9,201)};
END

RESULT NAME variable_locations
TYPE location = int(32);
     <tuple(funcid, int(32))>
     set(tuple(varid, location))
DATA
program noflow {(#435,68), (#410,62), (#417,65), (#499,81), (#386,7), (#416,8), (#398,9), (#377,10), (#335,11), (#387,57), (#345,43), (#373,49), (#430,67), (#374,51), (#367,48), (#325,37), (#328,38), (#362,47), (#437,70), (#343,42), (#402,60), (#460,15), (#455,16), (#456,17), (#525,21), (#490,22), (#543,83), (#476,75), (#479,76), (#482,77), (#665,26), (#644,27), (#551,28), (#662,113), (#555,86), (#578,94), (#572,91), (#630,105), (#558,89), (#618,104), (#616,103), (#603,100), (#567,90), (#581,99), (#579,98), (#573,93), (#547,84), (#652,112), (#610,102), (#554,85), (#872,208), (#863,199), (#864,200), (#870,204), (#865,201), (#868,203)};
END

RESULT NAME callstrings
TYPE callsite = label;
     <tuple(funcid, int(32))>
     list(callsite)
DATA
END

RESULT NAME ASLs
TYPE string
DATA
END

RESULT NAME callsite_locations
TYPE location = int(32);
     location
DATA
END

END
