{ alf
 { macro_defs }
 { least_addr_unit 8 }
 little_endian
 { exports
  { frefs
   { fref 64 "bit" }
   { fref 64 "value" }
  }
  { lrefs { lref 64 "des" } { lref 64 "getbit" } { lref 64 "ks" } { lref 64 "cyfun" } { lref 64 "main" } }
 }
 { imports
  { frefs
   { fref 64 "$null" }
   { fref 64 "$mem" }
  }
  { lrefs }
 }
 { decls
  { alloc 64 "des.ip" 520 }
  { alloc 64 "des.ipm" 520 }
  { alloc 64 "des.kns" 3264 }
  { alloc 64 "des.initflag" 32 }
  { alloc 64 "bit" 2112 }
  { alloc 64 "icd" 128 }
  { alloc 64 "ipc1" 456 }
  { alloc 64 "ipc2" 392 }
  { alloc 64 "cyfun.iet" 1568 }
  { alloc 64 "cyfun.ipp" 1056 }
  { alloc 64 "cyfun.is" 4608 }
  { alloc 64 "cyfun.ibin" 128 }
  { alloc 64 "value" 32 }
 }
 { inits
  { init { ref "des.ip" { dec_unsigned 64 0 } } { dec_unsigned 8 0 } }
  { init { ref "des.ip" { dec_unsigned 64 1 } } { dec_unsigned 8 58 } }
  { init { ref "des.ip" { dec_unsigned 64 2 } } { dec_unsigned 8 50 } }
  { init { ref "des.ip" { dec_unsigned 64 3 } } { dec_unsigned 8 42 } }
  { init { ref "des.ip" { dec_unsigned 64 4 } } { dec_unsigned 8 34 } }
  { init { ref "des.ip" { dec_unsigned 64 5 } } { dec_unsigned 8 26 } }
  { init { ref "des.ip" { dec_unsigned 64 6 } } { dec_unsigned 8 18 } }
  { init { ref "des.ip" { dec_unsigned 64 7 } } { dec_unsigned 8 10 } }
  { init { ref "des.ip" { dec_unsigned 64 8 } } { dec_unsigned 8 2 } }
  { init { ref "des.ip" { dec_unsigned 64 9 } } { dec_unsigned 8 60 } }
  { init { ref "des.ip" { dec_unsigned 64 10 } } { dec_unsigned 8 52 } }
  { init { ref "des.ip" { dec_unsigned 64 11 } } { dec_unsigned 8 44 } }
  { init { ref "des.ip" { dec_unsigned 64 12 } } { dec_unsigned 8 36 } }
  { init { ref "des.ip" { dec_unsigned 64 13 } } { dec_unsigned 8 28 } }
  { init { ref "des.ip" { dec_unsigned 64 14 } } { dec_unsigned 8 20 } }
  { init { ref "des.ip" { dec_unsigned 64 15 } } { dec_unsigned 8 12 } }
  { init { ref "des.ip" { dec_unsigned 64 16 } } { dec_unsigned 8 4 } }
  { init { ref "des.ip" { dec_unsigned 64 17 } } { dec_unsigned 8 62 } }
  { init { ref "des.ip" { dec_unsigned 64 18 } } { dec_unsigned 8 54 } }
  { init { ref "des.ip" { dec_unsigned 64 19 } } { dec_unsigned 8 46 } }
  { init { ref "des.ip" { dec_unsigned 64 20 } } { dec_unsigned 8 38 } }
  { init { ref "des.ip" { dec_unsigned 64 21 } } { dec_unsigned 8 30 } }
  { init { ref "des.ip" { dec_unsigned 64 22 } } { dec_unsigned 8 22 } }
  { init { ref "des.ip" { dec_unsigned 64 23 } } { dec_unsigned 8 14 } }
  { init { ref "des.ip" { dec_unsigned 64 24 } } { dec_unsigned 8 6 } }
  { init { ref "des.ip" { dec_unsigned 64 25 } } { dec_unsigned 8 64 } }
  { init { ref "des.ip" { dec_unsigned 64 26 } } { dec_unsigned 8 56 } }
  { init { ref "des.ip" { dec_unsigned 64 27 } } { dec_unsigned 8 48 } }
  { init { ref "des.ip" { dec_unsigned 64 28 } } { dec_unsigned 8 40 } }
  { init { ref "des.ip" { dec_unsigned 64 29 } } { dec_unsigned 8 32 } }
  { init { ref "des.ip" { dec_unsigned 64 30 } } { dec_unsigned 8 24 } }
  { init { ref "des.ip" { dec_unsigned 64 31 } } { dec_unsigned 8 16 } }
  { init { ref "des.ip" { dec_unsigned 64 32 } } { dec_unsigned 8 8 } }
  { init { ref "des.ip" { dec_unsigned 64 33 } } { dec_unsigned 8 57 } }
  { init { ref "des.ip" { dec_unsigned 64 34 } } { dec_unsigned 8 49 } }
  { init { ref "des.ip" { dec_unsigned 64 35 } } { dec_unsigned 8 41 } }
  { init { ref "des.ip" { dec_unsigned 64 36 } } { dec_unsigned 8 33 } }
  { init { ref "des.ip" { dec_unsigned 64 37 } } { dec_unsigned 8 25 } }
  { init { ref "des.ip" { dec_unsigned 64 38 } } { dec_unsigned 8 17 } }
  { init { ref "des.ip" { dec_unsigned 64 39 } } { dec_unsigned 8 9 } }
  { init { ref "des.ip" { dec_unsigned 64 40 } } { dec_unsigned 8 1 } }
  { init { ref "des.ip" { dec_unsigned 64 41 } } { dec_unsigned 8 59 } }
  { init { ref "des.ip" { dec_unsigned 64 42 } } { dec_unsigned 8 51 } }
  { init { ref "des.ip" { dec_unsigned 64 43 } } { dec_unsigned 8 43 } }
  { init { ref "des.ip" { dec_unsigned 64 44 } } { dec_unsigned 8 35 } }
  { init { ref "des.ip" { dec_unsigned 64 45 } } { dec_unsigned 8 27 } }
  { init { ref "des.ip" { dec_unsigned 64 46 } } { dec_unsigned 8 19 } }
  { init { ref "des.ip" { dec_unsigned 64 47 } } { dec_unsigned 8 11 } }
  { init { ref "des.ip" { dec_unsigned 64 48 } } { dec_unsigned 8 3 } }
  { init { ref "des.ip" { dec_unsigned 64 49 } } { dec_unsigned 8 61 } }
  { init { ref "des.ip" { dec_unsigned 64 50 } } { dec_unsigned 8 53 } }
  { init { ref "des.ip" { dec_unsigned 64 51 } } { dec_unsigned 8 45 } }
  { init { ref "des.ip" { dec_unsigned 64 52 } } { dec_unsigned 8 37 } }
  { init { ref "des.ip" { dec_unsigned 64 53 } } { dec_unsigned 8 29 } }
  { init { ref "des.ip" { dec_unsigned 64 54 } } { dec_unsigned 8 21 } }
  { init { ref "des.ip" { dec_unsigned 64 55 } } { dec_unsigned 8 13 } }
  { init { ref "des.ip" { dec_unsigned 64 56 } } { dec_unsigned 8 5 } }
  { init { ref "des.ip" { dec_unsigned 64 57 } } { dec_unsigned 8 63 } }
  { init { ref "des.ip" { dec_unsigned 64 58 } } { dec_unsigned 8 55 } }
  { init { ref "des.ip" { dec_unsigned 64 59 } } { dec_unsigned 8 47 } }
  { init { ref "des.ip" { dec_unsigned 64 60 } } { dec_unsigned 8 39 } }
  { init { ref "des.ip" { dec_unsigned 64 61 } } { dec_unsigned 8 31 } }
  { init { ref "des.ip" { dec_unsigned 64 62 } } { dec_unsigned 8 23 } }
  { init { ref "des.ip" { dec_unsigned 64 63 } } { dec_unsigned 8 15 } }
  { init { ref "des.ip" { dec_unsigned 64 64 } } { dec_unsigned 8 7 } }
  { init { ref "des.ipm" { dec_unsigned 64 0 } } { dec_unsigned 8 0 } }
  { init { ref "des.ipm" { dec_unsigned 64 1 } } { dec_unsigned 8 40 } }
  { init { ref "des.ipm" { dec_unsigned 64 2 } } { dec_unsigned 8 8 } }
  { init { ref "des.ipm" { dec_unsigned 64 3 } } { dec_unsigned 8 48 } }
  { init { ref "des.ipm" { dec_unsigned 64 4 } } { dec_unsigned 8 16 } }
  { init { ref "des.ipm" { dec_unsigned 64 5 } } { dec_unsigned 8 56 } }
  { init { ref "des.ipm" { dec_unsigned 64 6 } } { dec_unsigned 8 24 } }
  { init { ref "des.ipm" { dec_unsigned 64 7 } } { dec_unsigned 8 64 } }
  { init { ref "des.ipm" { dec_unsigned 64 8 } } { dec_unsigned 8 32 } }
  { init { ref "des.ipm" { dec_unsigned 64 9 } } { dec_unsigned 8 39 } }
  { init { ref "des.ipm" { dec_unsigned 64 10 } } { dec_unsigned 8 7 } }
  { init { ref "des.ipm" { dec_unsigned 64 11 } } { dec_unsigned 8 47 } }
  { init { ref "des.ipm" { dec_unsigned 64 12 } } { dec_unsigned 8 15 } }
  { init { ref "des.ipm" { dec_unsigned 64 13 } } { dec_unsigned 8 55 } }
  { init { ref "des.ipm" { dec_unsigned 64 14 } } { dec_unsigned 8 23 } }
  { init { ref "des.ipm" { dec_unsigned 64 15 } } { dec_unsigned 8 63 } }
  { init { ref "des.ipm" { dec_unsigned 64 16 } } { dec_unsigned 8 31 } }
  { init { ref "des.ipm" { dec_unsigned 64 17 } } { dec_unsigned 8 38 } }
  { init { ref "des.ipm" { dec_unsigned 64 18 } } { dec_unsigned 8 6 } }
  { init { ref "des.ipm" { dec_unsigned 64 19 } } { dec_unsigned 8 46 } }
  { init { ref "des.ipm" { dec_unsigned 64 20 } } { dec_unsigned 8 14 } }
  { init { ref "des.ipm" { dec_unsigned 64 21 } } { dec_unsigned 8 54 } }
  { init { ref "des.ipm" { dec_unsigned 64 22 } } { dec_unsigned 8 22 } }
  { init { ref "des.ipm" { dec_unsigned 64 23 } } { dec_unsigned 8 62 } }
  { init { ref "des.ipm" { dec_unsigned 64 24 } } { dec_unsigned 8 30 } }
  { init { ref "des.ipm" { dec_unsigned 64 25 } } { dec_unsigned 8 37 } }
  { init { ref "des.ipm" { dec_unsigned 64 26 } } { dec_unsigned 8 5 } }
  { init { ref "des.ipm" { dec_unsigned 64 27 } } { dec_unsigned 8 45 } }
  { init { ref "des.ipm" { dec_unsigned 64 28 } } { dec_unsigned 8 13 } }
  { init { ref "des.ipm" { dec_unsigned 64 29 } } { dec_unsigned 8 53 } }
  { init { ref "des.ipm" { dec_unsigned 64 30 } } { dec_unsigned 8 21 } }
  { init { ref "des.ipm" { dec_unsigned 64 31 } } { dec_unsigned 8 61 } }
  { init { ref "des.ipm" { dec_unsigned 64 32 } } { dec_unsigned 8 29 } }
  { init { ref "des.ipm" { dec_unsigned 64 33 } } { dec_unsigned 8 36 } }
  { init { ref "des.ipm" { dec_unsigned 64 34 } } { dec_unsigned 8 4 } }
  { init { ref "des.ipm" { dec_unsigned 64 35 } } { dec_unsigned 8 44 } }
  { init { ref "des.ipm" { dec_unsigned 64 36 } } { dec_unsigned 8 12 } }
  { init { ref "des.ipm" { dec_unsigned 64 37 } } { dec_unsigned 8 52 } }
  { init { ref "des.ipm" { dec_unsigned 64 38 } } { dec_unsigned 8 20 } }
  { init { ref "des.ipm" { dec_unsigned 64 39 } } { dec_unsigned 8 60 } }
  { init { ref "des.ipm" { dec_unsigned 64 40 } } { dec_unsigned 8 28 } }
  { init { ref "des.ipm" { dec_unsigned 64 41 } } { dec_unsigned 8 35 } }
  { init { ref "des.ipm" { dec_unsigned 64 42 } } { dec_unsigned 8 3 } }
  { init { ref "des.ipm" { dec_unsigned 64 43 } } { dec_unsigned 8 43 } }
  { init { ref "des.ipm" { dec_unsigned 64 44 } } { dec_unsigned 8 11 } }
  { init { ref "des.ipm" { dec_unsigned 64 45 } } { dec_unsigned 8 51 } }
  { init { ref "des.ipm" { dec_unsigned 64 46 } } { dec_unsigned 8 19 } }
  { init { ref "des.ipm" { dec_unsigned 64 47 } } { dec_unsigned 8 59 } }
  { init { ref "des.ipm" { dec_unsigned 64 48 } } { dec_unsigned 8 27 } }
  { init { ref "des.ipm" { dec_unsigned 64 49 } } { dec_unsigned 8 34 } }
  { init { ref "des.ipm" { dec_unsigned 64 50 } } { dec_unsigned 8 2 } }
  { init { ref "des.ipm" { dec_unsigned 64 51 } } { dec_unsigned 8 42 } }
  { init { ref "des.ipm" { dec_unsigned 64 52 } } { dec_unsigned 8 10 } }
  { init { ref "des.ipm" { dec_unsigned 64 53 } } { dec_unsigned 8 50 } }
  { init { ref "des.ipm" { dec_unsigned 64 54 } } { dec_unsigned 8 18 } }
  { init { ref "des.ipm" { dec_unsigned 64 55 } } { dec_unsigned 8 58 } }
  { init { ref "des.ipm" { dec_unsigned 64 56 } } { dec_unsigned 8 26 } }
  { init { ref "des.ipm" { dec_unsigned 64 57 } } { dec_unsigned 8 33 } }
  { init { ref "des.ipm" { dec_unsigned 64 58 } } { dec_unsigned 8 1 } }
  { init { ref "des.ipm" { dec_unsigned 64 59 } } { dec_unsigned 8 41 } }
  { init { ref "des.ipm" { dec_unsigned 64 60 } } { dec_unsigned 8 9 } }
  { init { ref "des.ipm" { dec_unsigned 64 61 } } { dec_unsigned 8 49 } }
  { init { ref "des.ipm" { dec_unsigned 64 62 } } { dec_unsigned 8 17 } }
  { init { ref "des.ipm" { dec_unsigned 64 63 } } { dec_unsigned 8 57 } }
  { init { ref "des.ipm" { dec_unsigned 64 64 } } { dec_unsigned 8 25 } }
  { init { ref "des.kns" { dec_unsigned 64 0 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 8 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 16 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 24 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 32 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 40 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 48 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 56 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 64 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 72 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 80 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 88 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 96 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 104 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 112 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 120 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 128 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 136 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 144 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 152 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 160 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 168 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 176 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 184 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 192 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 200 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 208 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 216 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 224 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 232 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 240 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 248 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 256 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 264 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 272 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 280 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 288 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 296 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 304 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 312 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 320 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 328 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 336 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 344 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 352 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 360 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 368 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 376 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 384 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 392 } } { dec_unsigned 64 0 } }
  { init { ref "des.kns" { dec_unsigned 64 400 } } { dec_unsigned 64 0 } }
  { init { ref "des.initflag" { dec_unsigned 64 0 } } { dec_unsigned 32 1 } }
  { init { ref "bit" { dec_unsigned 64 0 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 8 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 16 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 24 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 32 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 40 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 48 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 56 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 64 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 72 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 80 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 88 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 96 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 104 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 112 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 120 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 128 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 136 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 144 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 152 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 160 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 168 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 176 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 184 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 192 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 200 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 208 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 216 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 224 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 232 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 240 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 248 } } { dec_unsigned 64 0 } }
  { init { ref "bit" { dec_unsigned 64 256 } } { dec_unsigned 64 0 } }
  { init { ref "icd" { dec_unsigned 64 0 } } { dec_unsigned 64 0 } }
  { init { ref "icd" { dec_unsigned 64 8 } } { dec_unsigned 64 0 } }
  { init { ref "ipc1" { dec_unsigned 64 0 } } { dec_unsigned 8 0 } }
  { init { ref "ipc1" { dec_unsigned 64 1 } } { dec_unsigned 8 57 } }
  { init { ref "ipc1" { dec_unsigned 64 2 } } { dec_unsigned 8 49 } }
  { init { ref "ipc1" { dec_unsigned 64 3 } } { dec_unsigned 8 41 } }
  { init { ref "ipc1" { dec_unsigned 64 4 } } { dec_unsigned 8 33 } }
  { init { ref "ipc1" { dec_unsigned 64 5 } } { dec_unsigned 8 25 } }
  { init { ref "ipc1" { dec_unsigned 64 6 } } { dec_unsigned 8 17 } }
  { init { ref "ipc1" { dec_unsigned 64 7 } } { dec_unsigned 8 9 } }
  { init { ref "ipc1" { dec_unsigned 64 8 } } { dec_unsigned 8 1 } }
  { init { ref "ipc1" { dec_unsigned 64 9 } } { dec_unsigned 8 58 } }
  { init { ref "ipc1" { dec_unsigned 64 10 } } { dec_unsigned 8 50 } }
  { init { ref "ipc1" { dec_unsigned 64 11 } } { dec_unsigned 8 42 } }
  { init { ref "ipc1" { dec_unsigned 64 12 } } { dec_unsigned 8 34 } }
  { init { ref "ipc1" { dec_unsigned 64 13 } } { dec_unsigned 8 26 } }
  { init { ref "ipc1" { dec_unsigned 64 14 } } { dec_unsigned 8 18 } }
  { init { ref "ipc1" { dec_unsigned 64 15 } } { dec_unsigned 8 10 } }
  { init { ref "ipc1" { dec_unsigned 64 16 } } { dec_unsigned 8 2 } }
  { init { ref "ipc1" { dec_unsigned 64 17 } } { dec_unsigned 8 59 } }
  { init { ref "ipc1" { dec_unsigned 64 18 } } { dec_unsigned 8 51 } }
  { init { ref "ipc1" { dec_unsigned 64 19 } } { dec_unsigned 8 43 } }
  { init { ref "ipc1" { dec_unsigned 64 20 } } { dec_unsigned 8 35 } }
  { init { ref "ipc1" { dec_unsigned 64 21 } } { dec_unsigned 8 27 } }
  { init { ref "ipc1" { dec_unsigned 64 22 } } { dec_unsigned 8 19 } }
  { init { ref "ipc1" { dec_unsigned 64 23 } } { dec_unsigned 8 11 } }
  { init { ref "ipc1" { dec_unsigned 64 24 } } { dec_unsigned 8 3 } }
  { init { ref "ipc1" { dec_unsigned 64 25 } } { dec_unsigned 8 60 } }
  { init { ref "ipc1" { dec_unsigned 64 26 } } { dec_unsigned 8 52 } }
  { init { ref "ipc1" { dec_unsigned 64 27 } } { dec_unsigned 8 44 } }
  { init { ref "ipc1" { dec_unsigned 64 28 } } { dec_unsigned 8 36 } }
  { init { ref "ipc1" { dec_unsigned 64 29 } } { dec_unsigned 8 63 } }
  { init { ref "ipc1" { dec_unsigned 64 30 } } { dec_unsigned 8 55 } }
  { init { ref "ipc1" { dec_unsigned 64 31 } } { dec_unsigned 8 47 } }
  { init { ref "ipc1" { dec_unsigned 64 32 } } { dec_unsigned 8 39 } }
  { init { ref "ipc1" { dec_unsigned 64 33 } } { dec_unsigned 8 31 } }
  { init { ref "ipc1" { dec_unsigned 64 34 } } { dec_unsigned 8 23 } }
  { init { ref "ipc1" { dec_unsigned 64 35 } } { dec_unsigned 8 15 } }
  { init { ref "ipc1" { dec_unsigned 64 36 } } { dec_unsigned 8 7 } }
  { init { ref "ipc1" { dec_unsigned 64 37 } } { dec_unsigned 8 62 } }
  { init { ref "ipc1" { dec_unsigned 64 38 } } { dec_unsigned 8 54 } }
  { init { ref "ipc1" { dec_unsigned 64 39 } } { dec_unsigned 8 46 } }
  { init { ref "ipc1" { dec_unsigned 64 40 } } { dec_unsigned 8 38 } }
  { init { ref "ipc1" { dec_unsigned 64 41 } } { dec_unsigned 8 30 } }
  { init { ref "ipc1" { dec_unsigned 64 42 } } { dec_unsigned 8 22 } }
  { init { ref "ipc1" { dec_unsigned 64 43 } } { dec_unsigned 8 14 } }
  { init { ref "ipc1" { dec_unsigned 64 44 } } { dec_unsigned 8 6 } }
  { init { ref "ipc1" { dec_unsigned 64 45 } } { dec_unsigned 8 61 } }
  { init { ref "ipc1" { dec_unsigned 64 46 } } { dec_unsigned 8 53 } }
  { init { ref "ipc1" { dec_unsigned 64 47 } } { dec_unsigned 8 45 } }
  { init { ref "ipc1" { dec_unsigned 64 48 } } { dec_unsigned 8 37 } }
  { init { ref "ipc1" { dec_unsigned 64 49 } } { dec_unsigned 8 29 } }
  { init { ref "ipc1" { dec_unsigned 64 50 } } { dec_unsigned 8 21 } }
  { init { ref "ipc1" { dec_unsigned 64 51 } } { dec_unsigned 8 13 } }
  { init { ref "ipc1" { dec_unsigned 64 52 } } { dec_unsigned 8 5 } }
  { init { ref "ipc1" { dec_unsigned 64 53 } } { dec_unsigned 8 28 } }
  { init { ref "ipc1" { dec_unsigned 64 54 } } { dec_unsigned 8 20 } }
  { init { ref "ipc1" { dec_unsigned 64 55 } } { dec_unsigned 8 12 } }
  { init { ref "ipc1" { dec_unsigned 64 56 } } { dec_unsigned 8 4 } }
  { init { ref "ipc2" { dec_unsigned 64 0 } } { dec_unsigned 8 0 } }
  { init { ref "ipc2" { dec_unsigned 64 1 } } { dec_unsigned 8 14 } }
  { init { ref "ipc2" { dec_unsigned 64 2 } } { dec_unsigned 8 17 } }
  { init { ref "ipc2" { dec_unsigned 64 3 } } { dec_unsigned 8 11 } }
  { init { ref "ipc2" { dec_unsigned 64 4 } } { dec_unsigned 8 24 } }
  { init { ref "ipc2" { dec_unsigned 64 5 } } { dec_unsigned 8 1 } }
  { init { ref "ipc2" { dec_unsigned 64 6 } } { dec_unsigned 8 5 } }
  { init { ref "ipc2" { dec_unsigned 64 7 } } { dec_unsigned 8 3 } }
  { init { ref "ipc2" { dec_unsigned 64 8 } } { dec_unsigned 8 28 } }
  { init { ref "ipc2" { dec_unsigned 64 9 } } { dec_unsigned 8 15 } }
  { init { ref "ipc2" { dec_unsigned 64 10 } } { dec_unsigned 8 6 } }
  { init { ref "ipc2" { dec_unsigned 64 11 } } { dec_unsigned 8 21 } }
  { init { ref "ipc2" { dec_unsigned 64 12 } } { dec_unsigned 8 10 } }
  { init { ref "ipc2" { dec_unsigned 64 13 } } { dec_unsigned 8 23 } }
  { init { ref "ipc2" { dec_unsigned 64 14 } } { dec_unsigned 8 19 } }
  { init { ref "ipc2" { dec_unsigned 64 15 } } { dec_unsigned 8 12 } }
  { init { ref "ipc2" { dec_unsigned 64 16 } } { dec_unsigned 8 4 } }
  { init { ref "ipc2" { dec_unsigned 64 17 } } { dec_unsigned 8 26 } }
  { init { ref "ipc2" { dec_unsigned 64 18 } } { dec_unsigned 8 8 } }
  { init { ref "ipc2" { dec_unsigned 64 19 } } { dec_unsigned 8 16 } }
  { init { ref "ipc2" { dec_unsigned 64 20 } } { dec_unsigned 8 7 } }
  { init { ref "ipc2" { dec_unsigned 64 21 } } { dec_unsigned 8 27 } }
  { init { ref "ipc2" { dec_unsigned 64 22 } } { dec_unsigned 8 20 } }
  { init { ref "ipc2" { dec_unsigned 64 23 } } { dec_unsigned 8 13 } }
  { init { ref "ipc2" { dec_unsigned 64 24 } } { dec_unsigned 8 2 } }
  { init { ref "ipc2" { dec_unsigned 64 25 } } { dec_unsigned 8 41 } }
  { init { ref "ipc2" { dec_unsigned 64 26 } } { dec_unsigned 8 52 } }
  { init { ref "ipc2" { dec_unsigned 64 27 } } { dec_unsigned 8 31 } }
  { init { ref "ipc2" { dec_unsigned 64 28 } } { dec_unsigned 8 37 } }
  { init { ref "ipc2" { dec_unsigned 64 29 } } { dec_unsigned 8 47 } }
  { init { ref "ipc2" { dec_unsigned 64 30 } } { dec_unsigned 8 55 } }
  { init { ref "ipc2" { dec_unsigned 64 31 } } { dec_unsigned 8 30 } }
  { init { ref "ipc2" { dec_unsigned 64 32 } } { dec_unsigned 8 40 } }
  { init { ref "ipc2" { dec_unsigned 64 33 } } { dec_unsigned 8 51 } }
  { init { ref "ipc2" { dec_unsigned 64 34 } } { dec_unsigned 8 45 } }
  { init { ref "ipc2" { dec_unsigned 64 35 } } { dec_unsigned 8 33 } }
  { init { ref "ipc2" { dec_unsigned 64 36 } } { dec_unsigned 8 48 } }
  { init { ref "ipc2" { dec_unsigned 64 37 } } { dec_unsigned 8 44 } }
  { init { ref "ipc2" { dec_unsigned 64 38 } } { dec_unsigned 8 49 } }
  { init { ref "ipc2" { dec_unsigned 64 39 } } { dec_unsigned 8 39 } }
  { init { ref "ipc2" { dec_unsigned 64 40 } } { dec_unsigned 8 56 } }
  { init { ref "ipc2" { dec_unsigned 64 41 } } { dec_unsigned 8 34 } }
  { init { ref "ipc2" { dec_unsigned 64 42 } } { dec_unsigned 8 53 } }
  { init { ref "ipc2" { dec_unsigned 64 43 } } { dec_unsigned 8 46 } }
  { init { ref "ipc2" { dec_unsigned 64 44 } } { dec_unsigned 8 42 } }
  { init { ref "ipc2" { dec_unsigned 64 45 } } { dec_unsigned 8 50 } }
  { init { ref "ipc2" { dec_unsigned 64 46 } } { dec_unsigned 8 36 } }
  { init { ref "ipc2" { dec_unsigned 64 47 } } { dec_unsigned 8 29 } }
  { init { ref "ipc2" { dec_unsigned 64 48 } } { dec_unsigned 8 32 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 0 } } { dec_unsigned 32 0 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 4 } } { dec_unsigned 32 32 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 8 } } { dec_unsigned 32 1 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 12 } } { dec_unsigned 32 2 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 16 } } { dec_unsigned 32 3 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 20 } } { dec_unsigned 32 4 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 24 } } { dec_unsigned 32 5 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 28 } } { dec_unsigned 32 4 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 32 } } { dec_unsigned 32 5 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 36 } } { dec_unsigned 32 6 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 40 } } { dec_unsigned 32 7 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 44 } } { dec_unsigned 32 8 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 48 } } { dec_unsigned 32 9 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 52 } } { dec_unsigned 32 8 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 56 } } { dec_unsigned 32 9 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 60 } } { dec_unsigned 32 10 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 64 } } { dec_unsigned 32 11 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 68 } } { dec_unsigned 32 12 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 72 } } { dec_unsigned 32 13 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 76 } } { dec_unsigned 32 12 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 80 } } { dec_unsigned 32 13 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 84 } } { dec_unsigned 32 14 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 88 } } { dec_unsigned 32 15 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 92 } } { dec_unsigned 32 16 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 96 } } { dec_unsigned 32 17 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 100 } } { dec_unsigned 32 16 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 104 } } { dec_unsigned 32 17 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 108 } } { dec_unsigned 32 18 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 112 } } { dec_unsigned 32 19 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 116 } } { dec_unsigned 32 20 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 120 } } { dec_unsigned 32 21 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 124 } } { dec_unsigned 32 20 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 128 } } { dec_unsigned 32 21 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 132 } } { dec_unsigned 32 22 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 136 } } { dec_unsigned 32 23 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 140 } } { dec_unsigned 32 24 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 144 } } { dec_unsigned 32 25 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 148 } } { dec_unsigned 32 24 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 152 } } { dec_unsigned 32 25 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 156 } } { dec_unsigned 32 26 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 160 } } { dec_unsigned 32 27 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 164 } } { dec_unsigned 32 28 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 168 } } { dec_unsigned 32 29 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 172 } } { dec_unsigned 32 28 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 176 } } { dec_unsigned 32 29 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 180 } } { dec_unsigned 32 30 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 184 } } { dec_unsigned 32 31 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 188 } } { dec_unsigned 32 32 } }
  { init { ref "cyfun.iet" { dec_unsigned 64 192 } } { dec_unsigned 32 1 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 0 } } { dec_unsigned 32 0 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 4 } } { dec_unsigned 32 16 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 8 } } { dec_unsigned 32 7 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 12 } } { dec_unsigned 32 20 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 16 } } { dec_unsigned 32 21 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 20 } } { dec_unsigned 32 29 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 24 } } { dec_unsigned 32 12 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 28 } } { dec_unsigned 32 28 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 32 } } { dec_unsigned 32 17 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 36 } } { dec_unsigned 32 1 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 40 } } { dec_unsigned 32 15 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 44 } } { dec_unsigned 32 23 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 48 } } { dec_unsigned 32 26 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 52 } } { dec_unsigned 32 5 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 56 } } { dec_unsigned 32 18 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 60 } } { dec_unsigned 32 31 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 64 } } { dec_unsigned 32 10 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 68 } } { dec_unsigned 32 2 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 72 } } { dec_unsigned 32 8 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 76 } } { dec_unsigned 32 24 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 80 } } { dec_unsigned 32 14 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 84 } } { dec_unsigned 32 32 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 88 } } { dec_unsigned 32 27 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 92 } } { dec_unsigned 32 3 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 96 } } { dec_unsigned 32 9 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 100 } } { dec_unsigned 32 19 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 104 } } { dec_unsigned 32 13 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 108 } } { dec_unsigned 32 30 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 112 } } { dec_unsigned 32 6 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 116 } } { dec_unsigned 32 22 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 120 } } { dec_unsigned 32 11 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 124 } } { dec_unsigned 32 4 } }
  { init { ref "cyfun.ipp" { dec_unsigned 64 128 } } { dec_unsigned 32 25 } }
  { init { ref "cyfun.is" { dec_unsigned 64 0 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 1 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 2 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 3 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 4 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 5 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 6 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 7 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 8 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 9 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 10 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 11 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 12 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 13 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 14 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 15 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 16 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 17 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 18 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 19 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 20 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 21 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 22 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 23 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 24 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 25 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 26 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 27 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 28 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 29 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 30 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 31 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 32 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 33 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 34 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 35 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 36 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 37 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 38 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 39 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 40 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 41 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 42 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 43 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 44 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 45 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 46 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 47 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 48 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 49 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 50 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 51 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 52 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 53 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 54 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 55 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 56 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 57 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 58 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 59 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 60 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 61 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 62 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 63 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 64 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 65 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 66 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 67 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 68 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 69 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 70 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 71 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 72 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 73 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 74 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 75 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 76 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 77 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 78 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 79 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 80 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 81 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 82 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 83 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 84 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 85 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 86 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 87 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 88 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 89 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 90 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 91 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 92 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 93 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 94 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 95 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 96 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 97 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 98 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 99 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 100 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 101 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 102 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 103 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 104 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 105 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 106 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 107 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 108 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 109 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 110 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 111 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 112 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 113 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 114 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 115 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 116 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 117 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 118 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 119 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 120 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 121 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 122 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 123 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 124 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 125 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 126 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 127 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 128 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 129 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 130 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 131 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 132 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 133 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 134 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 135 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 136 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 137 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 138 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 139 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 140 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 141 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 142 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 143 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 144 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 145 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 146 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 147 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 148 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 149 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 150 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 151 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 152 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 153 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 154 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 155 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 156 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 157 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 158 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 159 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 160 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 161 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 162 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 163 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 164 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 165 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 166 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 167 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 168 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 169 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 170 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 171 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 172 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 173 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 174 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 175 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 176 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 177 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 178 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 179 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 180 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 181 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 182 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 183 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 184 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 185 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 186 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 187 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 188 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 189 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 190 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 191 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 192 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 193 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 194 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 195 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 196 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 197 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 198 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 199 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 200 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 201 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 202 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 203 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 204 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 205 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 206 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 207 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 208 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 209 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 210 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 211 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 212 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 213 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 214 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 215 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 216 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 217 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 218 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 219 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 220 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 221 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 222 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 223 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 224 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 225 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 226 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 227 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 228 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 229 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 230 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 231 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 232 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 233 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 234 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 235 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 236 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 237 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 238 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 239 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 240 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 241 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 242 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 243 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 244 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 245 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 246 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 247 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 248 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 249 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 250 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 251 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 252 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 253 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 254 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 255 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 256 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 257 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 258 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 259 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 260 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 261 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 262 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 263 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 264 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 265 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 266 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 267 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 268 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 269 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 270 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 271 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 272 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 273 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 274 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 275 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 276 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 277 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 278 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 279 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 280 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 281 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 282 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 283 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 284 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 285 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 286 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 287 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 288 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 289 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 290 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 291 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 292 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 293 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 294 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 295 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 296 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 297 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 298 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 299 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 300 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 301 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 302 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 303 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 304 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 305 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 306 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 307 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 308 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 309 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 310 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 311 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 312 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 313 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 314 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 315 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 316 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 317 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 318 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 319 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 320 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 321 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 322 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 323 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 324 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 325 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 326 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 327 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 328 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 329 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 330 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 331 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 332 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 333 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 334 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 335 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 336 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 337 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 338 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 339 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 340 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 341 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 342 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 343 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 344 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 345 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 346 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 347 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 348 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 349 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 350 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 351 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 352 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 353 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 354 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 355 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 356 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 357 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 358 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 359 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 360 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 361 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 362 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 363 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 364 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 365 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 366 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 367 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 368 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 369 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 370 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 371 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 372 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 373 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 374 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 375 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 376 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 377 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 378 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 379 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 380 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 381 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 382 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 383 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 384 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 385 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 386 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 387 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 388 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 389 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 390 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 391 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 392 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 393 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 394 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 395 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 396 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 397 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 398 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 399 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 400 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 401 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 402 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 403 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 404 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 405 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 406 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 407 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 408 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 409 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 410 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 411 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 412 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 413 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 414 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 415 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 416 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 417 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 418 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 419 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 420 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 421 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 422 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 423 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 424 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 425 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 426 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 427 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 428 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 429 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 430 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 431 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 432 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 433 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 434 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 435 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 436 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 437 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 438 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 439 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 440 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 441 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 442 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 443 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 444 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 445 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 446 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 447 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 448 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 449 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 450 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 451 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 452 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 453 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 454 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 455 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 456 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 457 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 458 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 459 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 460 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 461 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 462 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 463 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 464 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 465 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 466 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 467 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 468 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 469 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 470 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 471 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 472 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 473 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 474 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 475 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 476 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 477 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 478 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 479 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 480 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 481 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 482 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 483 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 484 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 485 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 486 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 487 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 488 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 489 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 490 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 491 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 492 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 493 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 494 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 495 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 496 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 497 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 498 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 499 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 500 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 501 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 502 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 503 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 504 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 505 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 506 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 507 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 508 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 509 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 510 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 511 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 512 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 513 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 514 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 515 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 516 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 517 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 518 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 519 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 520 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 521 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 522 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 523 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 524 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 525 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 526 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 527 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 528 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 529 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 530 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 531 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 532 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 533 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 534 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 535 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 536 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 537 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 538 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 539 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 540 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 541 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 542 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.is" { dec_unsigned 64 543 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 544 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 545 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 546 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.is" { dec_unsigned 64 547 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 548 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 549 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 550 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 551 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.is" { dec_unsigned 64 552 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.is" { dec_unsigned 64 553 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 554 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 555 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 556 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 557 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 558 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 559 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 560 } } { dec_unsigned 8 15 } }
  { init { ref "cyfun.is" { dec_unsigned 64 561 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.is" { dec_unsigned 64 562 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.is" { dec_unsigned 64 563 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 564 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.is" { dec_unsigned 64 565 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.is" { dec_unsigned 64 566 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.is" { dec_unsigned 64 567 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.is" { dec_unsigned 64 568 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 569 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.is" { dec_unsigned 64 570 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 571 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.is" { dec_unsigned 64 572 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.is" { dec_unsigned 64 573 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.is" { dec_unsigned 64 574 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.is" { dec_unsigned 64 575 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 0 } } { dec_unsigned 8 0 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 1 } } { dec_unsigned 8 8 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 2 } } { dec_unsigned 8 4 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 3 } } { dec_unsigned 8 12 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 4 } } { dec_unsigned 8 2 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 5 } } { dec_unsigned 8 10 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 6 } } { dec_unsigned 8 6 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 7 } } { dec_unsigned 8 14 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 8 } } { dec_unsigned 8 1 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 9 } } { dec_unsigned 8 9 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 10 } } { dec_unsigned 8 5 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 11 } } { dec_unsigned 8 13 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 12 } } { dec_unsigned 8 3 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 13 } } { dec_unsigned 8 11 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 14 } } { dec_unsigned 8 7 } }
  { init { ref "cyfun.ibin" { dec_unsigned 64 15 } } { dec_unsigned 8 15 } }
  { init { ref "value" { dec_unsigned 64 0 } } { dec_unsigned 32 1 } }
 }
 { funcs

  /* Definition of function des */
  { func
   { label 64 { lref 64 "des" } { dec_unsigned 64 0 } }
   { arg_decls
    { alloc 64 "%inp.coerce0" 64 }
    { alloc 64 "%inp.coerce1" 64 }
    { alloc 64 "%key.coerce0" 64 }
    { alloc 64 "%key.coerce1" 64 }
    { alloc 64 "%newkey" 64 }
    { alloc 64 "%isw" 32 }
    { alloc 64 "%out" 64 }
   }
   { scope
    { decls
     { alloc 64 "%inp" 128 } /* Alloca'd memory */ 
     { alloc 64 "%key" 128 } /* Alloca'd memory */ 
     { alloc 64 "%ic" 64 } /* Alloca'd memory */ 
     { alloc 64 "%itmp" 128 } /* Alloca'd memory */ 
     { alloc 64 "%pg" 192 } /* Alloca'd memory */ 
     { alloc 64 "%tmp4" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%j.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%shifter.0" 64 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp13" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%phitmp" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp16" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%j.1" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%k.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp22" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp23" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp26" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp29" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp31" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp32" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp34" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp35" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp38" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp41" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp43" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp44" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp47" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp48" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%i.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp62" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%j.2" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%k.1" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp70" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp71" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp72" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp75" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp78" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp80" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp81" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp84" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp85" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp86" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp89" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp92" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp94" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp95" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp99" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp100" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%i.1" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp107" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp110" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp112" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp116" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp117" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp120" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp122" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp125" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp128" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp130" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp132" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%j.3" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%k.2" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp139" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp140" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp141" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp144" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp147" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp149" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp150" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp153" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp154" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp155" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp158" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp161" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp163" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp164" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp168" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp169" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
    }
    { inits }
    { stmts

     /* --------- BASIC BLOCK bb ---------- */
      { label 64 { lref 64 "des::bb" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb::6
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp = getelementptr inbounds %struct.IMMENSE* %inp, i64 0, i32 0
        *   store i64 %inp.coerce0, i64* %tmp, align 8 */
      { store { addr 64 { fref 64 "%inp" } { dec_unsigned 64 0 } } with
       { load 64 { addr 64 { fref 64 "%inp.coerce0" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT des::bb::8
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp1 = getelementptr %struct.IMMENSE* %inp, i64 0, i32 1
        *   store i64 %inp.coerce1, i64* %tmp1, align 8 */
      { label 64 { lref 64 "des::bb::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%inp" } { dec_unsigned 64 8 } } with
       { load 64 { addr 64 { fref 64 "%inp.coerce1" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT des::bb::10
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp2 = getelementptr inbounds %struct.IMMENSE* %key, i64 0, i32 0
        *   store i64 %key.coerce0, i64* %tmp2, align 8 */
      { label 64 { lref 64 "des::bb::10" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%key" } { dec_unsigned 64 0 } } with
       { load 64 { addr 64 { fref 64 "%key.coerce0" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT des::bb::12
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp3 = getelementptr %struct.IMMENSE* %key, i64 0, i32 1
        *   store i64 %key.coerce1, i64* %tmp3, align 8 */
      { label 64 { lref 64 "des::bb::12" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%key" } { dec_unsigned 64 8 } } with
       { load 64 { addr 64 { fref 64 "%key.coerce1" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT des::bb::13
        *   %tmp4 = load i32* @des.initflag, align 4 */
      { label 64 { lref 64 "des::bb::13" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp4" } { dec_unsigned 64 0 } } with
       { load 32 { addr 64 { fref 64 "des.initflag" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT des::bb::15
        *   %tmp5 = icmp eq i32 %tmp4, 0
        *   br i1 %tmp5, label %bb15, label %bb6 */
      { label 64 { lref 64 "des::bb::15" } { dec_unsigned 64 0 } }
      { switch
       { eq 32 { load 32 { addr 64 { fref 64 "%tmp4" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb15" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb6" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb6 ---------- */
      { label 64 { lref 64 "des::bb6" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb6::0
        *   store i32 0, i32* @des.initflag, align 4 */
      { store { addr 64 { fref 64 "des.initflag" } { dec_unsigned 64 0 } } with { dec_unsigned 32 0 } }

      /* STATEMENT des::bb6::1
        *   store i64 1, i64* getelementptr inbounds ([33 x i64]* @bit, i64 0, i64 1), align 8 */
      { label 64 { lref 64 "des::bb6::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "bit" } { dec_unsigned 64 8 } } with { dec_unsigned 64 1 } }

      /* STATEMENT des::bb6::2
        *   br label %bb7 */
      { label 64 { lref 64 "des::bb6::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%shifter.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 2 } { dec_unsigned 64 2 } }

      { label 64 { lref 64 "des::bb6::2:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb7" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb7 ---------- */
      { label 64 { lref 64 "des::bb7" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb7::3
        *   %tmp8 = icmp slt i32 %j.0, 33
        *   br i1 %tmp8, label %bb9, label %bb14 */
      { switch
       { s_lt 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 33 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb9" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb14" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb9 ---------- */
      { label 64 { lref 64 "des::bb9" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb9::2
        *   %tmp10 = sext i32 %j.0 to i64
        *   %tmp11 = getelementptr inbounds [33 x i64]* @bit, i64 0, i64 %tmp10
        *   store i64 %shifter.0, i64* %tmp11, align 8 */
      { store
       { add 64 { addr 64 { fref 64 "bit" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 8 }
         }
        }
        { dec_unsigned 1 0 }
       }
       with
       { load 64 { addr 64 { fref 64 "%shifter.0" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT des::bb9::3
        *   br label %bb12 */
      { label 64 { lref 64 "des::bb9::3" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb12" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb12 ---------- */
      { label 64 { lref 64 "des::bb12" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb12::0
        *   %tmp13 = add nsw i32 %j.0, 1 */
      { store { addr 64 { fref 64 "%tmp13" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb12::1
        *   %phitmp = shl i64 %shifter.0, 1 */
      { label 64 { lref 64 "des::bb12::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%phitmp" } { dec_unsigned 64 0 } } with
       { l_shift 64 64
        { load 64 { addr 64 { fref 64 "%shifter.0" } { dec_unsigned 64 0 } } }
        { dec_unsigned 64 1 }
       }
      }

      /* STATEMENT des::bb12::2
        *   br label %bb7 */
      { label 64 { lref 64 "des::bb12::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%shifter.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp13" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%phitmp" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb12::2:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb7" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb14 ---------- */
      { label 64 { lref 64 "des::bb14" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb14::0
        *   br label %bb15 */
      { jump { label 64 { lref 64 "des::bb15" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb15 ---------- */
      { label 64 { lref 64 "des::bb15" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb15::0
        *   %tmp16 = load i32* %newkey, align 4 */
      { store { addr 64 { fref 64 "%tmp16" } { dec_unsigned 64 0 } } with
       { load 32 { load 64 { addr 64 { fref 64 "%newkey" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb15::2
        *   %tmp17 = icmp eq i32 %tmp16, 0
        *   br i1 %tmp17, label %bb64, label %bb18 */
      { label 64 { lref 64 "des::bb15::2" } { dec_unsigned 64 0 } }
      { switch
       { eq 32 { load 32 { addr 64 { fref 64 "%tmp16" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb64" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb18" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb18 ---------- */
      { label 64 { lref 64 "des::bb18" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb18::0
        *   store i32 0, i32* %newkey, align 4 */
      { store { load 64 { addr 64 { fref 64 "%newkey" } { dec_unsigned 64 0 } } } with { dec_unsigned 32 0 } }

      /* STATEMENT des::bb18::1
        *   store i64 0, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "des::bb18::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } with { dec_unsigned 64 0 } }

      /* STATEMENT des::bb18::2
        *   store i64 0, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "des::bb18::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } with { dec_unsigned 64 0 } }

      /* STATEMENT des::bb18::3
        *   br label %bb19 */
      { label 64 { lref 64 "des::bb18::3" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 28 } { dec_unsigned 32 56 } }

      { label 64 { lref 64 "des::bb18::3:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb19" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb19 ---------- */
      { label 64 { lref 64 "des::bb19" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb19::3
        *   %tmp20 = icmp sgt i32 %j.1, 0
        *   br i1 %tmp20, label %bb21, label %bb49 */
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb21" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb49" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb21 ---------- */
      { label 64 { lref 64 "des::bb21" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb21::0
        *   %tmp22 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { store { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb21::1
        *   %tmp23 = shl i64 %tmp22, 1 */
      { label 64 { lref 64 "des::bb21::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp23" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT des::bb21::2
        *   store i64 %tmp23, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "des::bb21::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } with { load 64 { addr 64 { fref 64 "%tmp23" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb21::5
        *   %tmp24 = sext i32 %j.1 to i64
        *   %tmp25 = getelementptr inbounds [57 x i8]* @ipc1, i64 0, i64 %tmp24
        *   %tmp26 = load i8* %tmp25, align 1 */
      { label 64 { lref 64 "des::bb21::5" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp26" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "ipc1" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT des::bb21::8
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp28 = getelementptr inbounds %struct.IMMENSE* %key, i64 0, i32 0
        *   %tmp29 = load i64* %tmp28, align 8 */
      { label 64 { lref 64 "des::bb21::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp29" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%key" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb21::10
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp30 = getelementptr %struct.IMMENSE* %key, i64 0, i32 1
        *   %tmp31 = load i64* %tmp30, align 8 */
      { label 64 { lref 64 "des::bb21::10" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp31" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%key" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb21::11
        *   %tmp27 = sext i8 %tmp26 to i32
        *   %tmp32 = call i64 @getbit(i64 %tmp29, i64 %tmp31, i32 %tmp27, i32 32) */
      { label 64 { lref 64 "des::bb21::11" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp29" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp31" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp26" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 32 }
       result
       { addr 64 { fref 64 "%tmp32" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT des::bb21::13
        *   %tmp33 = or i64 %tmp23, %tmp32
        *   store i64 %tmp33, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "des::bb21::13" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp23" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp32" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb21::14
        *   %tmp34 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "des::bb21::14" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp34" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb21::15
        *   %tmp35 = shl i64 %tmp34, 1 */
      { label 64 { lref 64 "des::bb21::15" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp35" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp34" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT des::bb21::16
        *   store i64 %tmp35, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "des::bb21::16" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%tmp35" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb21::19
        *   %tmp36 = sext i32 %k.0 to i64
        *   %tmp37 = getelementptr inbounds [57 x i8]* @ipc1, i64 0, i64 %tmp36
        *   %tmp38 = load i8* %tmp37, align 1 */
      { label 64 { lref 64 "des::bb21::19" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp38" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "ipc1" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT des::bb21::22
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp40 = getelementptr inbounds %struct.IMMENSE* %key, i64 0, i32 0
        *   %tmp41 = load i64* %tmp40, align 8 */
      { label 64 { lref 64 "des::bb21::22" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp41" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%key" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb21::24
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp42 = getelementptr %struct.IMMENSE* %key, i64 0, i32 1
        *   %tmp43 = load i64* %tmp42, align 8 */
      { label 64 { lref 64 "des::bb21::24" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp43" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%key" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb21::25
        *   %tmp39 = sext i8 %tmp38 to i32
        *   %tmp44 = call i64 @getbit(i64 %tmp41, i64 %tmp43, i32 %tmp39, i32 32) */
      { label 64 { lref 64 "des::bb21::25" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp41" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp43" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp38" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 32 }
       result
       { addr 64 { fref 64 "%tmp44" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT des::bb21::27
        *   %tmp45 = or i64 %tmp35, %tmp44
        *   store i64 %tmp45, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "des::bb21::27" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp35" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp44" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb21::28
        *   br label %bb46 */
      { label 64 { lref 64 "des::bb21::28" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb46" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb46 ---------- */
      { label 64 { lref 64 "des::bb46" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb46::0
        *   %tmp47 = add nsw i32 %j.1, -1 */
      { store { addr 64 { fref 64 "%tmp47" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb46::1
        *   %tmp48 = add nsw i32 %k.0, -1 */
      { label 64 { lref 64 "des::bb46::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp48" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb46::2
        *   br label %bb19 */
      { label 64 { lref 64 "des::bb46::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp47" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp48" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb46::2:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb19" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb49 ---------- */
      { label 64 { lref 64 "des::bb49" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb49::0
        *   br label %bb50 */
      { store { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 1 } }

      { label 64 { lref 64 "des::bb49::0:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb50" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb50 ---------- */
      { label 64 { lref 64 "des::bb50" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb50::2
        *   %tmp51 = icmp slt i32 %i.0, 17
        *   br i1 %tmp51, label %bb52, label %bb63 */
      { switch
       { s_lt 32 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 17 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb52" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb63" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb52 ---------- */
      { label 64 { lref 64 "des::bb52" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb52::4
        *   %pg = alloca %struct.GREAT, align 8
        *   %tmp55 = bitcast %struct.GREAT* %pg to i8*
        *   %tmp53 = sext i32 %i.0 to i64
        *   %tmp54 = getelementptr inbounds [17 x %struct.GREAT]* @des.kns, i64 0, i64 %tmp53
        *   %tmp56 = bitcast %struct.GREAT* %tmp54 to i8*
        *   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp55, i8* %tmp56, i64 24, i32 8, i1 false) */
      { store
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 0 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 1 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 2 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 3 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 4 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 5 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 6 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 7 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 9 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 10 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 11 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 12 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 13 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 14 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 15 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 16 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 17 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 18 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 19 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 20 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 21 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 22 } { dec_unsigned 1 0 } }
       { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 23 } { dec_unsigned 1 0 } }
       with
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 0 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 1 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 2 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 3 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 4 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 5 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 6 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 7 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 8 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 9 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 10 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 11 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 12 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 13 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 14 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 15 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 16 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 17 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 18 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 19 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 20 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 21 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 22 }
         { dec_unsigned 1 0 }
        }
       }
       { load 8
        { add 64
         { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
          { select 128 0 63
           { u_mul 64 64
            { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
            { dec_unsigned 64 24 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { dec_unsigned 64 23 }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT des::bb52::5
        *   %pg = alloca %struct.GREAT, align 8
        *   call void @ks(i32 %i.0, %struct.GREAT* %pg) */
      { label 64 { lref 64 "des::bb52::5" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "ks" } { dec_unsigned 64 0 } } { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } result }

      /* STATEMENT des::bb52::10
        *   %tmp57 = sext i32 %i.0 to i64
        *   %tmp58 = getelementptr inbounds [17 x %struct.GREAT]* @des.kns, i64 0, i64 %tmp57
        *   %tmp59 = bitcast %struct.GREAT* %tmp58 to i8*
        *   %pg = alloca %struct.GREAT, align 8
        *   %tmp60 = bitcast %struct.GREAT* %pg to i8*
        *   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp59, i8* %tmp60, i64 24, i32 8, i1 false) */
      { label 64 { lref 64 "des::bb52::10" } { dec_unsigned 64 0 } }
      { store
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 0 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 1 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 2 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 3 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 4 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 5 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 6 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 7 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 8 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 9 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 10 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 11 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 12 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 13 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 14 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 15 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 16 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 17 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 18 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 19 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 20 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 21 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 22 }
        { dec_unsigned 1 0 }
       }
       { add 64
        { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 24 }
          }
         }
         { dec_unsigned 1 0 }
        }
        { dec_unsigned 64 23 }
        { dec_unsigned 1 0 }
       }
       with
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 0 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 1 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 2 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 3 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 4 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 5 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 6 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 7 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 9 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 10 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 11 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 12 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 13 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 14 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 15 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 16 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 17 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 18 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 19 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 20 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 21 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 22 } { dec_unsigned 1 0 } }
       }
       { load 8
        { add 64 { addr 64 { fref 64 "%pg" } { dec_unsigned 64 0 } } { dec_unsigned 64 23 } { dec_unsigned 1 0 } }
       }
      }

      /* STATEMENT des::bb52::11
        *   br label %bb61 */
      { label 64 { lref 64 "des::bb52::11" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb61" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb61 ---------- */
      { label 64 { lref 64 "des::bb61" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb61::0
        *   %tmp62 = add nsw i32 %i.0, 1 */
      { store { addr 64 { fref 64 "%tmp62" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb61::1
        *   br label %bb50 */
      { label 64 { lref 64 "des::bb61::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp62" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb61::1:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb50" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb63 ---------- */
      { label 64 { lref 64 "des::bb63" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb63::0
        *   br label %bb64 */
      { jump { label 64 { lref 64 "des::bb64" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb64 ---------- */
      { label 64 { lref 64 "des::bb64" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb64::1
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp65 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   store i64 0, i64* %tmp65, align 8 */
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } with { dec_unsigned 64 0 } }

      /* STATEMENT des::bb64::3
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp66 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 1
        *   store i64 0, i64* %tmp66, align 8 */
      { label 64 { lref 64 "des::bb64::3" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } with { dec_unsigned 64 0 } }

      /* STATEMENT des::bb64::4
        *   br label %bb67 */
      { label 64 { lref 64 "des::bb64::4" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.1" } { dec_unsigned 64 0 } } with { dec_unsigned 32 32 } { dec_unsigned 32 64 } }

      { label 64 { lref 64 "des::bb64::4:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb67" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb67 ---------- */
      { label 64 { lref 64 "des::bb67" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb67::3
        *   %tmp68 = icmp sgt i32 %j.2, 0
        *   br i1 %tmp68, label %bb69, label %bb101 */
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb69" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb101" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb69 ---------- */
      { label 64 { lref 64 "des::bb69" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb69::0
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp70 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 1 */
      { store { addr 64 { fref 64 "%tmp70" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } }

      /* STATEMENT des::bb69::1
        *   %tmp71 = load i64* %tmp70, align 8 */
      { label 64 { lref 64 "des::bb69::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp71" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp70" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb69::2
        *   %tmp72 = shl i64 %tmp71, 1 */
      { label 64 { lref 64 "des::bb69::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp72" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp71" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT des::bb69::3
        *   store i64 %tmp72, i64* %tmp70, align 8 */
      { label 64 { lref 64 "des::bb69::3" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp70" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp72" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb69::6
        *   %tmp73 = sext i32 %j.2 to i64
        *   %tmp74 = getelementptr inbounds [65 x i8]* @des.ip, i64 0, i64 %tmp73
        *   %tmp75 = load i8* %tmp74, align 1 */
      { label 64 { lref 64 "des::bb69::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp75" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "des.ip" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT des::bb69::9
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp77 = getelementptr inbounds %struct.IMMENSE* %inp, i64 0, i32 0
        *   %tmp78 = load i64* %tmp77, align 8 */
      { label 64 { lref 64 "des::bb69::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp78" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%inp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb69::11
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp79 = getelementptr %struct.IMMENSE* %inp, i64 0, i32 1
        *   %tmp80 = load i64* %tmp79, align 8 */
      { label 64 { lref 64 "des::bb69::11" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp80" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%inp" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb69::12
        *   %tmp76 = sext i8 %tmp75 to i32
        *   %tmp81 = call i64 @getbit(i64 %tmp78, i64 %tmp80, i32 %tmp76, i32 32) */
      { label 64 { lref 64 "des::bb69::12" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp78" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp80" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp75" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 32 }
       result
       { addr 64 { fref 64 "%tmp81" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT des::bb69::15
        *   %tmp82 = or i64 %tmp72, %tmp81
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp83 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 1
        *   store i64 %tmp82, i64* %tmp83, align 8 */
      { label 64 { lref 64 "des::bb69::15" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp72" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp81" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb69::16
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp84 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0 */
      { label 64 { lref 64 "des::bb69::16" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp84" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } }

      /* STATEMENT des::bb69::17
        *   %tmp85 = load i64* %tmp84, align 8 */
      { label 64 { lref 64 "des::bb69::17" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp85" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp84" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb69::18
        *   %tmp86 = shl i64 %tmp85, 1 */
      { label 64 { lref 64 "des::bb69::18" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp86" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp85" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT des::bb69::19
        *   store i64 %tmp86, i64* %tmp84, align 8 */
      { label 64 { lref 64 "des::bb69::19" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp84" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp86" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb69::22
        *   %tmp87 = sext i32 %k.1 to i64
        *   %tmp88 = getelementptr inbounds [65 x i8]* @des.ip, i64 0, i64 %tmp87
        *   %tmp89 = load i8* %tmp88, align 1 */
      { label 64 { lref 64 "des::bb69::22" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp89" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "des.ip" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%k.1" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT des::bb69::25
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp91 = getelementptr inbounds %struct.IMMENSE* %inp, i64 0, i32 0
        *   %tmp92 = load i64* %tmp91, align 8 */
      { label 64 { lref 64 "des::bb69::25" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp92" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%inp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb69::27
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp93 = getelementptr %struct.IMMENSE* %inp, i64 0, i32 1
        *   %tmp94 = load i64* %tmp93, align 8 */
      { label 64 { lref 64 "des::bb69::27" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp94" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%inp" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb69::28
        *   %tmp90 = sext i8 %tmp89 to i32
        *   %tmp95 = call i64 @getbit(i64 %tmp92, i64 %tmp94, i32 %tmp90, i32 32) */
      { label 64 { lref 64 "des::bb69::28" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp92" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp94" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp89" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 32 }
       result
       { addr 64 { fref 64 "%tmp95" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT des::bb69::31
        *   %tmp96 = or i64 %tmp86, %tmp95
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp97 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   store i64 %tmp96, i64* %tmp97, align 8 */
      { label 64 { lref 64 "des::bb69::31" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp86" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp95" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb69::32
        *   br label %bb98 */
      { label 64 { lref 64 "des::bb69::32" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb98" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb98 ---------- */
      { label 64 { lref 64 "des::bb98" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb98::0
        *   %tmp99 = add nsw i32 %j.2, -1 */
      { store { addr 64 { fref 64 "%tmp99" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb98::1
        *   %tmp100 = add nsw i32 %k.1, -1 */
      { label 64 { lref 64 "des::bb98::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp100" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%k.1" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb98::2
        *   br label %bb67 */
      { label 64 { lref 64 "des::bb98::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.1" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp99" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp100" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb98::2:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb67" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb101 ---------- */
      { label 64 { lref 64 "des::bb101" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb101::0
        *   br label %bb102 */
      { store { addr 64 { fref 64 "%i.1" } { dec_unsigned 64 0 } } with { dec_unsigned 32 1 } }

      { label 64 { lref 64 "des::bb101::0:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb102" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb102 ---------- */
      { label 64 { lref 64 "des::bb102" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb102::2
        *   %tmp103 = icmp slt i32 %i.1, 17
        *   br i1 %tmp103, label %bb104, label %bb126 */
      { switch
       { s_lt 32 { load 32 { addr 64 { fref 64 "%i.1" } { dec_unsigned 64 0 } } } { dec_unsigned 32 17 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb104" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb126" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb104 ---------- */
      { label 64 { lref 64 "des::bb104" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb104::1
        *   %tmp105 = icmp eq i32 %isw, 1
        *   br i1 %tmp105, label %bb106, label %bb108 */
      { switch
       { eq 32 { load 32 { addr 64 { fref 64 "%isw" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb106" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb108" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb106 ---------- */
      { label 64 { lref 64 "des::bb106" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb106::0
        *   %tmp107 = sub nsw i32 17, %i.1 */
      { store { addr 64 { fref 64 "%tmp107" } { dec_unsigned 64 0 } } with
       { sub 32 { dec_unsigned 32 17 } { load 32 { addr 64 { fref 64 "%i.1" } { dec_unsigned 64 0 } } } { dec_unsigned 1 1 } }
      }

      /* STATEMENT des::bb106::1
        *   br label %bb109 */
      { label 64 { lref 64 "des::bb106::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp110" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp107" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb106::1:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb109" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb108 ---------- */
      { label 64 { lref 64 "des::bb108" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb108::0
        *   br label %bb109 */
      { store { addr 64 { fref 64 "%tmp110" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%i.1" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb108::0:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb109" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb109 ---------- */
      { label 64 { lref 64 "des::bb109" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb109::2
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp111 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   %tmp112 = load i64* %tmp111, align 8 */
      { store { addr 64 { fref 64 "%tmp112" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb109::5
        *   %tmp113 = sext i32 %tmp110 to i64
        *   %tmp114 = getelementptr inbounds [17 x %struct.GREAT]* @des.kns, i64 0, i64 %tmp113
        *   %ic = alloca i64, align 8
        *   call void @cyfun(i64 %tmp112, %struct.GREAT* byval align 8 %tmp114, i64* %ic) */
      { label 64 { lref 64 "des::bb109::5" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "cyfun" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp112" } { dec_unsigned 64 0 } } }
       { add 64 { addr 64 { fref 64 "des.kns" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64 { load 32 { addr 64 { fref 64 "%tmp110" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 24 }
         }
        }
        { dec_unsigned 1 0 }
       }
       { addr 64 { fref 64 "%ic" } { dec_unsigned 64 0 } }
       result
      }

      /* STATEMENT des::bb109::7
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp115 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 1
        *   %tmp116 = load i64* %tmp115, align 8 */
      { label 64 { lref 64 "des::bb109::7" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp116" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb109::8
        *   %ic = alloca i64, align 8
        *   %tmp117 = load i64* %ic, align 8 */
      { label 64 { lref 64 "des::bb109::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp117" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%ic" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb109::10
        *   %tmp118 = xor i64 %tmp117, %tmp116
        *   %ic = alloca i64, align 8
        *   store i64 %tmp118, i64* %ic, align 8 */
      { label 64 { lref 64 "des::bb109::10" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%ic" } { dec_unsigned 64 0 } } with
       { xor 64 { load 64 { addr 64 { fref 64 "%tmp117" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp116" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb109::12
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp119 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   %tmp120 = load i64* %tmp119, align 8 */
      { label 64 { lref 64 "des::bb109::12" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp120" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb109::14
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp121 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 1
        *   store i64 %tmp120, i64* %tmp121, align 8 */
      { label 64 { lref 64 "des::bb109::14" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } with { load 64 { addr 64 { fref 64 "%tmp120" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb109::15
        *   %ic = alloca i64, align 8
        *   %tmp122 = load i64* %ic, align 8 */
      { label 64 { lref 64 "des::bb109::15" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp122" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%ic" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb109::17
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp123 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   store i64 %tmp122, i64* %tmp123, align 8 */
      { label 64 { lref 64 "des::bb109::17" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%tmp122" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb109::18
        *   br label %bb124 */
      { label 64 { lref 64 "des::bb109::18" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb124" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb124 ---------- */
      { label 64 { lref 64 "des::bb124" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb124::0
        *   %tmp125 = add nsw i32 %i.1, 1 */
      { store { addr 64 { fref 64 "%tmp125" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%i.1" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb124::1
        *   br label %bb102 */
      { label 64 { lref 64 "des::bb124::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%i.1" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp125" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb124::1:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb102" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb126 ---------- */
      { label 64 { lref 64 "des::bb126" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb126::1
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp127 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 1
        *   %tmp128 = load i64* %tmp127, align 8 */
      { store { addr 64 { fref 64 "%tmp128" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb126::2
        *   %ic = alloca i64, align 8
        *   store i64 %tmp128, i64* %ic, align 8 */
      { label 64 { lref 64 "des::bb126::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%ic" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%tmp128" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb126::4
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp129 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   %tmp130 = load i64* %tmp129, align 8 */
      { label 64 { lref 64 "des::bb126::4" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp130" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb126::6
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp131 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 1
        *   store i64 %tmp130, i64* %tmp131, align 8 */
      { label 64 { lref 64 "des::bb126::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } with { load 64 { addr 64 { fref 64 "%tmp130" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb126::7
        *   %ic = alloca i64, align 8
        *   %tmp132 = load i64* %ic, align 8 */
      { label 64 { lref 64 "des::bb126::7" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp132" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%ic" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb126::9
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp133 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   store i64 %tmp132, i64* %tmp133, align 8 */
      { label 64 { lref 64 "des::bb126::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%tmp132" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb126::11
        *   %tmp134 = getelementptr inbounds %struct.IMMENSE* %out, i64 0, i32 0
        *   store i64 0, i64* %tmp134, align 8 */
      { label 64 { lref 64 "des::bb126::11" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%out" } { dec_unsigned 64 0 } } } with { dec_unsigned 64 0 } }

      /* STATEMENT des::bb126::13
        *   %tmp135 = getelementptr inbounds %struct.IMMENSE* %out, i64 0, i32 1
        *   store i64 0, i64* %tmp135, align 8 */
      { label 64 { lref 64 "des::bb126::13" } { dec_unsigned 64 0 } }
      { store
       { add 64 { load 64 { addr 64 { fref 64 "%out" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
       with
       { dec_unsigned 64 0 }
      }

      /* STATEMENT des::bb126::14
        *   br label %bb136 */
      { label 64 { lref 64 "des::bb126::14" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.3" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.2" } { dec_unsigned 64 0 } } with { dec_unsigned 32 32 } { dec_unsigned 32 64 } }

      { label 64 { lref 64 "des::bb126::14:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb136" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb136 ---------- */
      { label 64 { lref 64 "des::bb136" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb136::3
        *   %tmp137 = icmp sgt i32 %j.3, 0
        *   br i1 %tmp137, label %bb138, label %bb170 */
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%j.3" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "des::bb138" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "des::bb170" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb138 ---------- */
      { label 64 { lref 64 "des::bb138" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb138::0
        *   %tmp139 = getelementptr inbounds %struct.IMMENSE* %out, i64 0, i32 1 */
      { store { addr 64 { fref 64 "%tmp139" } { dec_unsigned 64 0 } } with
       { add 64 { load 64 { addr 64 { fref 64 "%out" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb138::1
        *   %tmp140 = load i64* %tmp139, align 8 */
      { label 64 { lref 64 "des::bb138::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp140" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp139" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb138::2
        *   %tmp141 = shl i64 %tmp140, 1 */
      { label 64 { lref 64 "des::bb138::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp141" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp140" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT des::bb138::3
        *   store i64 %tmp141, i64* %tmp139, align 8 */
      { label 64 { lref 64 "des::bb138::3" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp139" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp141" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb138::6
        *   %tmp142 = sext i32 %j.3 to i64
        *   %tmp143 = getelementptr inbounds [65 x i8]* @des.ipm, i64 0, i64 %tmp142
        *   %tmp144 = load i8* %tmp143, align 1 */
      { label 64 { lref 64 "des::bb138::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp144" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "des.ipm" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.3" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT des::bb138::9
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp146 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   %tmp147 = load i64* %tmp146, align 8 */
      { label 64 { lref 64 "des::bb138::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp147" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb138::11
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp148 = getelementptr %struct.IMMENSE* %itmp, i64 0, i32 1
        *   %tmp149 = load i64* %tmp148, align 8 */
      { label 64 { lref 64 "des::bb138::11" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp149" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb138::12
        *   %tmp145 = sext i8 %tmp144 to i32
        *   %tmp150 = call i64 @getbit(i64 %tmp147, i64 %tmp149, i32 %tmp145, i32 32) */
      { label 64 { lref 64 "des::bb138::12" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp147" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp149" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp144" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 32 }
       result
       { addr 64 { fref 64 "%tmp150" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT des::bb138::15
        *   %tmp151 = or i64 %tmp141, %tmp150
        *   %tmp152 = getelementptr inbounds %struct.IMMENSE* %out, i64 0, i32 1
        *   store i64 %tmp151, i64* %tmp152, align 8 */
      { label 64 { lref 64 "des::bb138::15" } { dec_unsigned 64 0 } }
      { store
       { add 64 { load 64 { addr 64 { fref 64 "%out" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
       with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp141" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp150" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb138::16
        *   %tmp153 = getelementptr inbounds %struct.IMMENSE* %out, i64 0, i32 0 */
      { label 64 { lref 64 "des::bb138::16" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp153" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%out" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb138::17
        *   %tmp154 = load i64* %tmp153, align 8 */
      { label 64 { lref 64 "des::bb138::17" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp154" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp153" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb138::18
        *   %tmp155 = shl i64 %tmp154, 1 */
      { label 64 { lref 64 "des::bb138::18" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp155" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp154" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT des::bb138::19
        *   store i64 %tmp155, i64* %tmp153, align 8 */
      { label 64 { lref 64 "des::bb138::19" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp153" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp155" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb138::22
        *   %tmp156 = sext i32 %k.2 to i64
        *   %tmp157 = getelementptr inbounds [65 x i8]* @des.ipm, i64 0, i64 %tmp156
        *   %tmp158 = load i8* %tmp157, align 1 */
      { label 64 { lref 64 "des::bb138::22" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp158" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "des.ipm" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%k.2" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT des::bb138::25
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp160 = getelementptr inbounds %struct.IMMENSE* %itmp, i64 0, i32 0
        *   %tmp161 = load i64* %tmp160, align 8 */
      { label 64 { lref 64 "des::bb138::25" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp161" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT des::bb138::27
        *   %itmp = alloca %struct.IMMENSE, align 8
        *   %tmp162 = getelementptr %struct.IMMENSE* %itmp, i64 0, i32 1
        *   %tmp163 = load i64* %tmp162, align 8 */
      { label 64 { lref 64 "des::bb138::27" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp163" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%itmp" } { dec_unsigned 64 8 } } } }

      /* STATEMENT des::bb138::28
        *   %tmp159 = sext i8 %tmp158 to i32
        *   %tmp164 = call i64 @getbit(i64 %tmp161, i64 %tmp163, i32 %tmp159, i32 32) */
      { label 64 { lref 64 "des::bb138::28" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp161" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp163" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp158" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 32 }
       result
       { addr 64 { fref 64 "%tmp164" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT des::bb138::31
        *   %tmp165 = or i64 %tmp155, %tmp164
        *   %tmp166 = getelementptr inbounds %struct.IMMENSE* %out, i64 0, i32 0
        *   store i64 %tmp165, i64* %tmp166, align 8 */
      { label 64 { lref 64 "des::bb138::31" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%out" } { dec_unsigned 64 0 } } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp155" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp164" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT des::bb138::32
        *   br label %bb167 */
      { label 64 { lref 64 "des::bb138::32" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb167" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb167 ---------- */
      { label 64 { lref 64 "des::bb167" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb167::0
        *   %tmp168 = add nsw i32 %j.3, -1 */
      { store { addr 64 { fref 64 "%tmp168" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.3" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb167::1
        *   %tmp169 = add nsw i32 %k.2, -1 */
      { label 64 { lref 64 "des::bb167::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp169" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%k.2" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT des::bb167::2
        *   br label %bb136 */
      { label 64 { lref 64 "des::bb167::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.3" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.2" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp168" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp169" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "des::bb167::2:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "des::bb136" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb170 ---------- */
      { label 64 { lref 64 "des::bb170" } { dec_unsigned 64 0 } }

      /* STATEMENT des::bb170::0
        *   ret void */
      { return }
    }
   }
  }

  /* Definition of function getbit */
  { func
   { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } }
   { arg_decls
    { alloc 64 "%source.coerce0" 64 }
    { alloc 64 "%source.coerce1" 64 }
    { alloc 64 "%bitno" 32 }
    { alloc 64 "%nbits" 32 }
   }
   { scope
    { decls
     { alloc 64 "%source" 128 } /* Alloca'd memory */ 
     { alloc 64 "%tmp6" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp8" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp11" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp16" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp18" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp21" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%.0" 64 } /* Local Variable (PHI node) */ 
    }
    { inits }
    { stmts

     /* --------- BASIC BLOCK bb ---------- */
      { label 64 { lref 64 "getbit::bb" } { dec_unsigned 64 0 } }

      /* STATEMENT getbit::bb::2
        *   %source = alloca %struct.IMMENSE, align 8
        *   %tmp = getelementptr inbounds %struct.IMMENSE* %source, i64 0, i32 0
        *   store i64 %source.coerce0, i64* %tmp, align 8 */
      { store { addr 64 { fref 64 "%source" } { dec_unsigned 64 0 } } with
       { load 64 { addr 64 { fref 64 "%source.coerce0" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT getbit::bb::4
        *   %source = alloca %struct.IMMENSE, align 8
        *   %tmp1 = getelementptr %struct.IMMENSE* %source, i64 0, i32 1
        *   store i64 %source.coerce1, i64* %tmp1, align 8 */
      { label 64 { lref 64 "getbit::bb::4" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%source" } { dec_unsigned 64 8 } } with
       { load 64 { addr 64 { fref 64 "%source.coerce1" } { dec_unsigned 64 0 } } }
      }

      /* STATEMENT getbit::bb::6
        *   %tmp2 = icmp sgt i32 %bitno, %nbits
        *   br i1 %tmp2, label %bb12, label %bb3 */
      { label 64 { lref 64 "getbit::bb::6" } { dec_unsigned 64 0 } }
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%bitno" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%nbits" } { dec_unsigned 64 0 } } } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "getbit::bb12" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "getbit::bb3" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb3 ---------- */
      { label 64 { lref 64 "getbit::bb3" } { dec_unsigned 64 0 } }

      /* STATEMENT getbit::bb3::2
        *   %tmp4 = sext i32 %bitno to i64
        *   %tmp5 = getelementptr inbounds [33 x i64]* @bit, i64 0, i64 %tmp4
        *   %tmp6 = load i64* %tmp5, align 8 */
      { store { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { addr 64 { fref 64 "bit" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%bitno" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 8 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT getbit::bb3::4
        *   %source = alloca %struct.IMMENSE, align 8
        *   %tmp7 = getelementptr inbounds %struct.IMMENSE* %source, i64 0, i32 1
        *   %tmp8 = load i64* %tmp7, align 8 */
      { label 64 { lref 64 "getbit::bb3::4" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%source" } { dec_unsigned 64 8 } } } }

      /* STATEMENT getbit::bb3::7
        *   %tmp9 = and i64 %tmp6, %tmp8
        *   %tmp10 = icmp ne i64 %tmp9, 0
        *   %tmp11 = zext i1 %tmp10 to i64 */
      { label 64 { lref 64 "getbit::bb3::7" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp11" } { dec_unsigned 64 0 } } with
       { conc 63 1 { dec_unsigned 63 0 }
        { neq 64
         { and 64 { load 64 { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } } }
         { dec_unsigned 64 0 }
        }
       }
      }

      /* STATEMENT getbit::bb3::8
        *   br label %bb22 */
      { label 64 { lref 64 "getbit::bb3::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%.0" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%tmp11" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "getbit::bb3::8:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "getbit::bb22" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb12 ---------- */
      { label 64 { lref 64 "getbit::bb12" } { dec_unsigned 64 0 } }

      /* STATEMENT getbit::bb12::3
        *   %tmp13 = sub nsw i32 %bitno, %nbits
        *   %tmp14 = sext i32 %tmp13 to i64
        *   %tmp15 = getelementptr inbounds [33 x i64]* @bit, i64 0, i64 %tmp14
        *   %tmp16 = load i64* %tmp15, align 8 */
      { store { addr 64 { fref 64 "%tmp16" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { addr 64 { fref 64 "bit" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64
            { sub 32 { load 32 { addr 64 { fref 64 "%bitno" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%nbits" } { dec_unsigned 64 0 } } } { dec_unsigned 1 1 } }
           }
           { dec_unsigned 64 8 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT getbit::bb12::5
        *   %source = alloca %struct.IMMENSE, align 8
        *   %tmp17 = getelementptr inbounds %struct.IMMENSE* %source, i64 0, i32 0
        *   %tmp18 = load i64* %tmp17, align 8 */
      { label 64 { lref 64 "getbit::bb12::5" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp18" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%source" } { dec_unsigned 64 0 } } } }

      /* STATEMENT getbit::bb12::8
        *   %tmp19 = and i64 %tmp16, %tmp18
        *   %tmp20 = icmp ne i64 %tmp19, 0
        *   %tmp21 = zext i1 %tmp20 to i64 */
      { label 64 { lref 64 "getbit::bb12::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp21" } { dec_unsigned 64 0 } } with
       { conc 63 1 { dec_unsigned 63 0 }
        { neq 64
         { and 64 { load 64 { addr 64 { fref 64 "%tmp16" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp18" } { dec_unsigned 64 0 } } } }
         { dec_unsigned 64 0 }
        }
       }
      }

      /* STATEMENT getbit::bb12::9
        *   br label %bb22 */
      { label 64 { lref 64 "getbit::bb12::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%.0" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%tmp21" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "getbit::bb12::9:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "getbit::bb22" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb22 ---------- */
      { label 64 { lref 64 "getbit::bb22" } { dec_unsigned 64 0 } }

      /* STATEMENT getbit::bb22::1
        *   ret i64 %.0 */
      { return { load 64 { addr 64 { fref 64 "%.0" } { dec_unsigned 64 0 } } } }
    }
   }
  }

  /* Definition of function ks */
  { func
   { label 64 { lref 64 "ks" } { dec_unsigned 64 0 } }
   { arg_decls
    { alloc 64 "%n" 32 }
    { alloc 64 "%kn" 64 }
   }
   { scope
    { decls
     { alloc 64 "%tmp8" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp13" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%i.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp22" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp27" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp33" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%j.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%k.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%l.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp42" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp43" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp44" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp47" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp49" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp50" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp51" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp55" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp56" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp57" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp60" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp62" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp63" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp64" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp68" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp69" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp70" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp73" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp75" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp76" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp77" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp82" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp83" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp84" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
    }
    { inits }
    { stmts

     /* --------- BASIC BLOCK bb ---------- */
      { label 64 { lref 64 "ks::bb" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb::1
        *   %tmp = icmp eq i32 %n, 1
        *   br i1 %tmp, label %bb7, label %bb1 */
      { switch
       { eq 32 { load 32 { addr 64 { fref 64 "%n" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "ks::bb7" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "ks::bb1" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb1 ---------- */
      { label 64 { lref 64 "ks::bb1" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb1::1
        *   %tmp2 = icmp eq i32 %n, 2
        *   br i1 %tmp2, label %bb7, label %bb3 */
      { switch
       { eq 32 { load 32 { addr 64 { fref 64 "%n" } { dec_unsigned 64 0 } } } { dec_unsigned 32 2 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "ks::bb7" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "ks::bb3" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb3 ---------- */
      { label 64 { lref 64 "ks::bb3" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb3::1
        *   %tmp4 = icmp eq i32 %n, 9
        *   br i1 %tmp4, label %bb7, label %bb5 */
      { switch
       { eq 32 { load 32 { addr 64 { fref 64 "%n" } { dec_unsigned 64 0 } } } { dec_unsigned 32 9 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "ks::bb7" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "ks::bb5" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb5 ---------- */
      { label 64 { lref 64 "ks::bb5" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb5::1
        *   %tmp6 = icmp eq i32 %n, 16
        *   br i1 %tmp6, label %bb7, label %bb18 */
      { switch
       { eq 32 { load 32 { addr 64 { fref 64 "%n" } { dec_unsigned 64 0 } } } { dec_unsigned 32 16 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "ks::bb7" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "ks::bb18" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb7 ---------- */
      { label 64 { lref 64 "ks::bb7" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb7::0
        *   %tmp8 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { store { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } } }

      /* STATEMENT ks::bb7::5
        *   %tmp9 = shl i64 %tmp8, 28
        *   %tmp10 = and i64 %tmp9, 268435456
        *   %tmp11 = or i64 %tmp8, %tmp10
        *   %tmp12 = lshr i64 %tmp11, 1
        *   store i64 %tmp12, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "ks::bb7::5" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } with
       { r_shift 64 64
        { or 64 { load 64 { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } }
         { and 64
          { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } } { dec_unsigned 64 28 } }
          { dec_unsigned 64 268435456 }
         }
        }
        { dec_unsigned 64 1 }
       }
      }

      /* STATEMENT ks::bb7::6
        *   %tmp13 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "ks::bb7::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp13" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb7::11
        *   %tmp14 = shl i64 %tmp13, 28
        *   %tmp15 = and i64 %tmp14, 268435456
        *   %tmp16 = or i64 %tmp13, %tmp15
        *   %tmp17 = lshr i64 %tmp16, 1
        *   store i64 %tmp17, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "ks::bb7::11" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } with
       { r_shift 64 64
        { or 64 { load 64 { addr 64 { fref 64 "%tmp13" } { dec_unsigned 64 0 } } }
         { and 64
          { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp13" } { dec_unsigned 64 0 } } } { dec_unsigned 64 28 } }
          { dec_unsigned 64 268435456 }
         }
        }
        { dec_unsigned 64 1 }
       }
      }

      /* STATEMENT ks::bb7::12
        *   br label %bb35 */
      { label 64 { lref 64 "ks::bb7::12" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "ks::bb35" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb18 ---------- */
      { label 64 { lref 64 "ks::bb18" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb18::0
        *   br label %bb19 */
      { store { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 1 } }

      { label 64 { lref 64 "ks::bb18::0:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "ks::bb19" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb19 ---------- */
      { label 64 { lref 64 "ks::bb19" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb19::2
        *   %tmp20 = icmp slt i32 %i.0, 3
        *   br i1 %tmp20, label %bb21, label %bb34 */
      { switch
       { s_lt 32 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 3 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "ks::bb21" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "ks::bb34" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb21 ---------- */
      { label 64 { lref 64 "ks::bb21" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb21::0
        *   %tmp22 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { store { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } } }

      /* STATEMENT ks::bb21::5
        *   %tmp23 = shl i64 %tmp22, 28
        *   %tmp24 = and i64 %tmp23, 268435456
        *   %tmp25 = or i64 %tmp22, %tmp24
        *   %tmp26 = lshr i64 %tmp25, 1
        *   store i64 %tmp26, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "ks::bb21::5" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } with
       { r_shift 64 64
        { or 64 { load 64 { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } }
         { and 64
          { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } } { dec_unsigned 64 28 } }
          { dec_unsigned 64 268435456 }
         }
        }
        { dec_unsigned 64 1 }
       }
      }

      /* STATEMENT ks::bb21::6
        *   %tmp27 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "ks::bb21::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp27" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb21::11
        *   %tmp28 = shl i64 %tmp27, 28
        *   %tmp29 = and i64 %tmp28, 268435456
        *   %tmp30 = or i64 %tmp27, %tmp29
        *   %tmp31 = lshr i64 %tmp30, 1
        *   store i64 %tmp31, i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "ks::bb21::11" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } with
       { r_shift 64 64
        { or 64 { load 64 { addr 64 { fref 64 "%tmp27" } { dec_unsigned 64 0 } } }
         { and 64
          { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp27" } { dec_unsigned 64 0 } } } { dec_unsigned 64 28 } }
          { dec_unsigned 64 268435456 }
         }
        }
        { dec_unsigned 64 1 }
       }
      }

      /* STATEMENT ks::bb21::12
        *   br label %bb32 */
      { label 64 { lref 64 "ks::bb21::12" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "ks::bb32" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb32 ---------- */
      { label 64 { lref 64 "ks::bb32" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb32::0
        *   %tmp33 = add nsw i32 %i.0, 1 */
      { store { addr 64 { fref 64 "%tmp33" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT ks::bb32::1
        *   br label %bb19 */
      { label 64 { lref 64 "ks::bb32::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp33" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "ks::bb32::1:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "ks::bb19" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb34 ---------- */
      { label 64 { lref 64 "ks::bb34" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb34::0
        *   br label %bb35 */
      { jump { label 64 { lref 64 "ks::bb35" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb35 ---------- */
      { label 64 { lref 64 "ks::bb35" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb35::1
        *   %tmp36 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 0
        *   store i64 0, i64* %tmp36, align 8 */
      { store { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } with { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb35::3
        *   %tmp37 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 1
        *   store i64 0, i64* %tmp37, align 8 */
      { label 64 { lref 64 "ks::bb35::3" } { dec_unsigned 64 0 } }
      { store
       { add 64 { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
       with
       { dec_unsigned 64 0 }
      }

      /* STATEMENT ks::bb35::5
        *   %tmp38 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 2
        *   store i64 0, i64* %tmp38, align 8 */
      { label 64 { lref 64 "ks::bb35::5" } { dec_unsigned 64 0 } }
      { store
       { add 64 { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } { dec_unsigned 64 16 } { dec_unsigned 1 0 } }
       with
       { dec_unsigned 64 0 }
      }

      /* STATEMENT ks::bb35::6
        *   br label %bb39 */
      { label 64 { lref 64 "ks::bb35::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 16 } { dec_unsigned 32 32 } { dec_unsigned 32 48 } }

      { label 64 { lref 64 "ks::bb35::6:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "ks::bb39" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb39 ---------- */
      { label 64 { lref 64 "ks::bb39" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb39::4
        *   %tmp40 = icmp sgt i32 %j.0, 0
        *   br i1 %tmp40, label %bb41, label %bb85 */
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "ks::bb41" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "ks::bb85" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb41 ---------- */
      { label 64 { lref 64 "ks::bb41" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb41::0
        *   %tmp42 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 2 */
      { store { addr 64 { fref 64 "%tmp42" } { dec_unsigned 64 0 } } with
       { add 64 { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } { dec_unsigned 64 16 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT ks::bb41::1
        *   %tmp43 = load i64* %tmp42, align 8 */
      { label 64 { lref 64 "ks::bb41::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp43" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp42" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT ks::bb41::2
        *   %tmp44 = shl i64 %tmp43, 1 */
      { label 64 { lref 64 "ks::bb41::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp44" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp43" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT ks::bb41::3
        *   store i64 %tmp44, i64* %tmp42, align 8 */
      { label 64 { lref 64 "ks::bb41::3" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp42" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp44" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb41::6
        *   %tmp45 = sext i32 %j.0 to i64
        *   %tmp46 = getelementptr inbounds [49 x i8]* @ipc2, i64 0, i64 %tmp45
        *   %tmp47 = load i8* %tmp46, align 1 */
      { label 64 { lref 64 "ks::bb41::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp47" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "ipc2" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT ks::bb41::8
        *   %tmp49 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "ks::bb41::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp49" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb41::9
        *   %tmp50 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "ks::bb41::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp50" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } } }

      /* STATEMENT ks::bb41::10
        *   %tmp48 = sext i8 %tmp47 to i32
        *   %tmp51 = call i64 @getbit(i64 %tmp49, i64 %tmp50, i32 %tmp48, i32 28) */
      { label 64 { lref 64 "ks::bb41::10" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp49" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp50" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp47" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 28 }
       result
       { addr 64 { fref 64 "%tmp51" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT ks::bb41::14
        *   %tmp52 = and i64 %tmp51, 65535
        *   %tmp53 = or i64 %tmp44, %tmp52
        *   %tmp54 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 2
        *   store i64 %tmp53, i64* %tmp54, align 8 */
      { label 64 { lref 64 "ks::bb41::14" } { dec_unsigned 64 0 } }
      { store
       { add 64 { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } { dec_unsigned 64 16 } { dec_unsigned 1 0 } }
       with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp44" } { dec_unsigned 64 0 } } }
        { and 64 { load 64 { addr 64 { fref 64 "%tmp51" } { dec_unsigned 64 0 } } } { dec_unsigned 64 65535 } }
       }
      }

      /* STATEMENT ks::bb41::15
        *   %tmp55 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 1 */
      { label 64 { lref 64 "ks::bb41::15" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp55" } { dec_unsigned 64 0 } } with
       { add 64 { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT ks::bb41::16
        *   %tmp56 = load i64* %tmp55, align 8 */
      { label 64 { lref 64 "ks::bb41::16" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp56" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp55" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT ks::bb41::17
        *   %tmp57 = shl i64 %tmp56, 1 */
      { label 64 { lref 64 "ks::bb41::17" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp57" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp56" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT ks::bb41::18
        *   store i64 %tmp57, i64* %tmp55, align 8 */
      { label 64 { lref 64 "ks::bb41::18" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp55" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp57" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb41::21
        *   %tmp58 = sext i32 %k.0 to i64
        *   %tmp59 = getelementptr inbounds [49 x i8]* @ipc2, i64 0, i64 %tmp58
        *   %tmp60 = load i8* %tmp59, align 1 */
      { label 64 { lref 64 "ks::bb41::21" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp60" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "ipc2" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT ks::bb41::23
        *   %tmp62 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "ks::bb41::23" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp62" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb41::24
        *   %tmp63 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "ks::bb41::24" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp63" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } } }

      /* STATEMENT ks::bb41::25
        *   %tmp61 = sext i8 %tmp60 to i32
        *   %tmp64 = call i64 @getbit(i64 %tmp62, i64 %tmp63, i32 %tmp61, i32 28) */
      { label 64 { lref 64 "ks::bb41::25" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp62" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp63" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp60" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 28 }
       result
       { addr 64 { fref 64 "%tmp64" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT ks::bb41::29
        *   %tmp65 = and i64 %tmp64, 65535
        *   %tmp66 = or i64 %tmp57, %tmp65
        *   %tmp67 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 1
        *   store i64 %tmp66, i64* %tmp67, align 8 */
      { label 64 { lref 64 "ks::bb41::29" } { dec_unsigned 64 0 } }
      { store
       { add 64 { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
       with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp57" } { dec_unsigned 64 0 } } }
        { and 64 { load 64 { addr 64 { fref 64 "%tmp64" } { dec_unsigned 64 0 } } } { dec_unsigned 64 65535 } }
       }
      }

      /* STATEMENT ks::bb41::30
        *   %tmp68 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 0 */
      { label 64 { lref 64 "ks::bb41::30" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp68" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb41::31
        *   %tmp69 = load i64* %tmp68, align 8 */
      { label 64 { lref 64 "ks::bb41::31" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp69" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp68" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT ks::bb41::32
        *   %tmp70 = shl i64 %tmp69, 1 */
      { label 64 { lref 64 "ks::bb41::32" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp70" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp69" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT ks::bb41::33
        *   store i64 %tmp70, i64* %tmp68, align 8 */
      { label 64 { lref 64 "ks::bb41::33" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp68" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp70" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb41::36
        *   %tmp71 = sext i32 %l.0 to i64
        *   %tmp72 = getelementptr inbounds [49 x i8]* @ipc2, i64 0, i64 %tmp71
        *   %tmp73 = load i8* %tmp72, align 1 */
      { label 64 { lref 64 "ks::bb41::36" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp73" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "ipc2" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT ks::bb41::38
        *   %tmp75 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 0), align 8 */
      { label 64 { lref 64 "ks::bb41::38" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp75" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 0 } } } }

      /* STATEMENT ks::bb41::39
        *   %tmp76 = load i64* getelementptr inbounds (%struct.IMMENSE* @icd, i64 0, i32 1), align 8 */
      { label 64 { lref 64 "ks::bb41::39" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp76" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "icd" } { dec_unsigned 64 8 } } } }

      /* STATEMENT ks::bb41::40
        *   %tmp74 = sext i8 %tmp73 to i32
        *   %tmp77 = call i64 @getbit(i64 %tmp75, i64 %tmp76, i32 %tmp74, i32 28) */
      { label 64 { lref 64 "ks::bb41::40" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "getbit" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp75" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp76" } { dec_unsigned 64 0 } } }
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp73" } { dec_unsigned 64 0 } } } }
       { dec_unsigned 32 28 }
       result
       { addr 64 { fref 64 "%tmp77" } { dec_unsigned 64 0 } }
      }

      /* STATEMENT ks::bb41::44
        *   %tmp78 = and i64 %tmp77, 65535
        *   %tmp79 = or i64 %tmp70, %tmp78
        *   %tmp80 = getelementptr inbounds %struct.GREAT* %kn, i64 0, i32 0
        *   store i64 %tmp79, i64* %tmp80, align 8 */
      { label 64 { lref 64 "ks::bb41::44" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%kn" } { dec_unsigned 64 0 } } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp70" } { dec_unsigned 64 0 } } }
        { and 64 { load 64 { addr 64 { fref 64 "%tmp77" } { dec_unsigned 64 0 } } } { dec_unsigned 64 65535 } }
       }
      }

      /* STATEMENT ks::bb41::45
        *   br label %bb81 */
      { label 64 { lref 64 "ks::bb41::45" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "ks::bb81" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb81 ---------- */
      { label 64 { lref 64 "ks::bb81" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb81::0
        *   %tmp82 = add nsw i32 %j.0, -1 */
      { store { addr 64 { fref 64 "%tmp82" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT ks::bb81::1
        *   %tmp83 = add nsw i32 %k.0, -1 */
      { label 64 { lref 64 "ks::bb81::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp83" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT ks::bb81::2
        *   %tmp84 = add nsw i32 %l.0, -1 */
      { label 64 { lref 64 "ks::bb81::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp84" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT ks::bb81::3
        *   br label %bb39 */
      { label 64 { lref 64 "ks::bb81::3" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%k.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp82" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp83" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp84" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "ks::bb81::3:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "ks::bb39" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb85 ---------- */
      { label 64 { lref 64 "ks::bb85" } { dec_unsigned 64 0 } }

      /* STATEMENT ks::bb85::0
        *   ret void */
      { return }
    }
   }
  }

  /* Definition of function cyfun */
  { func
   { label 64 { lref 64 "cyfun" } { dec_unsigned 64 0 } }
   { arg_decls
    { alloc 64 "%ir" 64 }
    { alloc 64 "%k" 64 }
    { alloc 64 "%iout" 64 }
   }
   { scope
    { decls
     { alloc 64 "%ie" 192 } /* Alloca'd memory */ 
     { alloc 64 "%iec" 72 } /* Alloca'd memory */ 
     { alloc 64 "%j.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%l.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%m.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp6" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp7" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp8" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp11" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp14" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp20" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp21" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp22" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp25" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp28" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp34" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp35" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp36" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp39" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp42" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp49" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp50" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp51" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp54" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp55" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp56" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp59" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp60" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp61" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp64" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp65" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp66" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp69" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp72" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp73" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp75" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp78" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp80" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%j.1" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%ietmp2.0" 64 } /* Local Variable (PHI node) */ 
     { alloc 64 "%ietmp1.0" 64 } /* Local Variable (PHI node) */ 
     { alloc 64 "%m.1" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp91" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp92" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp93" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp94" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%jj.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%itmp.0" 64 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp101" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp102" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp123" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp126" 8 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp129" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp130" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%j.2" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp135" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp136" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp139" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp142" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp148" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
    }
    { inits }
    { stmts

     /* --------- BASIC BLOCK bb ---------- */
      { label 64 { lref 64 "cyfun::bb" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb::3
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 0
        *   store i64 0, i64* %tmp, align 8 */
      { store { addr 64 { fref 64 "%ie" } { dec_unsigned 64 0 } } with { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb::5
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp1 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 1
        *   store i64 0, i64* %tmp1, align 8 */
      { label 64 { lref 64 "cyfun::bb::5" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%ie" } { dec_unsigned 64 8 } } with { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb::7
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp2 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 2
        *   store i64 0, i64* %tmp2, align 8 */
      { label 64 { lref 64 "cyfun::bb::7" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%ie" } { dec_unsigned 64 16 } } with { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb::8
        *   br label %bb3 */
      { label 64 { lref 64 "cyfun::bb::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%m.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 16 } { dec_unsigned 32 32 } { dec_unsigned 32 48 } }

      { label 64 { lref 64 "cyfun::bb::8:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb3" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb3 ---------- */
      { label 64 { lref 64 "cyfun::bb3" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb3::4
        *   %tmp4 = icmp sgt i32 %j.0, 0
        *   br i1 %tmp4, label %bb5, label %bb52 */
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "cyfun::bb5" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "cyfun::bb52" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb5 ---------- */
      { label 64 { lref 64 "cyfun::bb5" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb5::0
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp6 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 2 */
      { store { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%ie" } { dec_unsigned 64 16 } } }

      /* STATEMENT cyfun::bb5::1
        *   %tmp7 = load i64* %tmp6, align 8 */
      { label 64 { lref 64 "cyfun::bb5::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp7" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb5::2
        *   %tmp8 = shl i64 %tmp7, 1 */
      { label 64 { lref 64 "cyfun::bb5::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp7" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT cyfun::bb5::3
        *   store i64 %tmp8, i64* %tmp6, align 8 */
      { label 64 { lref 64 "cyfun::bb5::3" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } } }

      /* STATEMENT cyfun::bb5::6
        *   %tmp9 = sext i32 %j.0 to i64
        *   %tmp10 = getelementptr inbounds [49 x i32]* @cyfun.iet, i64 0, i64 %tmp9
        *   %tmp11 = load i32* %tmp10, align 4 */
      { label 64 { lref 64 "cyfun::bb5::6" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp11" } { dec_unsigned 64 0 } } with
       { load 32
        { add 64 { addr 64 { fref 64 "cyfun.iet" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 4 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb5::9
        *   %tmp12 = sext i32 %tmp11 to i64
        *   %tmp13 = getelementptr inbounds [33 x i64]* @bit, i64 0, i64 %tmp12
        *   %tmp14 = load i64* %tmp13, align 8 */
      { label 64 { lref 64 "cyfun::bb5::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp14" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { addr 64 { fref 64 "bit" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%tmp11" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 8 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb5::15
        *   %tmp15 = and i64 %tmp14, %ir
        *   %tmp16 = icmp ne i64 %tmp15, 0
        *   %tmp17 = zext i1 %tmp16 to i64
        *   %tmp18 = or i64 %tmp8, %tmp17
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp19 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 2
        *   store i64 %tmp18, i64* %tmp19, align 8 */
      { label 64 { lref 64 "cyfun::bb5::15" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%ie" } { dec_unsigned 64 16 } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } }
        { conc 63 1 { dec_unsigned 63 0 }
         { neq 64
          { and 64 { load 64 { addr 64 { fref 64 "%tmp14" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%ir" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 0 }
         }
        }
       }
      }

      /* STATEMENT cyfun::bb5::16
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp20 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 1 */
      { label 64 { lref 64 "cyfun::bb5::16" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp20" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%ie" } { dec_unsigned 64 8 } } }

      /* STATEMENT cyfun::bb5::17
        *   %tmp21 = load i64* %tmp20, align 8 */
      { label 64 { lref 64 "cyfun::bb5::17" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp21" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp20" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb5::18
        *   %tmp22 = shl i64 %tmp21, 1 */
      { label 64 { lref 64 "cyfun::bb5::18" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp21" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT cyfun::bb5::19
        *   store i64 %tmp22, i64* %tmp20, align 8 */
      { label 64 { lref 64 "cyfun::bb5::19" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp20" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } } }

      /* STATEMENT cyfun::bb5::22
        *   %tmp23 = sext i32 %l.0 to i64
        *   %tmp24 = getelementptr inbounds [49 x i32]* @cyfun.iet, i64 0, i64 %tmp23
        *   %tmp25 = load i32* %tmp24, align 4 */
      { label 64 { lref 64 "cyfun::bb5::22" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp25" } { dec_unsigned 64 0 } } with
       { load 32
        { add 64 { addr 64 { fref 64 "cyfun.iet" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 4 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb5::25
        *   %tmp26 = sext i32 %tmp25 to i64
        *   %tmp27 = getelementptr inbounds [33 x i64]* @bit, i64 0, i64 %tmp26
        *   %tmp28 = load i64* %tmp27, align 8 */
      { label 64 { lref 64 "cyfun::bb5::25" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp28" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { addr 64 { fref 64 "bit" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%tmp25" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 8 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb5::31
        *   %tmp29 = and i64 %tmp28, %ir
        *   %tmp30 = icmp ne i64 %tmp29, 0
        *   %tmp31 = zext i1 %tmp30 to i64
        *   %tmp32 = or i64 %tmp22, %tmp31
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp33 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 1
        *   store i64 %tmp32, i64* %tmp33, align 8 */
      { label 64 { lref 64 "cyfun::bb5::31" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%ie" } { dec_unsigned 64 8 } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp22" } { dec_unsigned 64 0 } } }
        { conc 63 1 { dec_unsigned 63 0 }
         { neq 64
          { and 64 { load 64 { addr 64 { fref 64 "%tmp28" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%ir" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 0 }
         }
        }
       }
      }

      /* STATEMENT cyfun::bb5::32
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp34 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 0 */
      { label 64 { lref 64 "cyfun::bb5::32" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp34" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%ie" } { dec_unsigned 64 0 } } }

      /* STATEMENT cyfun::bb5::33
        *   %tmp35 = load i64* %tmp34, align 8 */
      { label 64 { lref 64 "cyfun::bb5::33" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp35" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp34" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb5::34
        *   %tmp36 = shl i64 %tmp35, 1 */
      { label 64 { lref 64 "cyfun::bb5::34" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp36" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp35" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT cyfun::bb5::35
        *   store i64 %tmp36, i64* %tmp34, align 8 */
      { label 64 { lref 64 "cyfun::bb5::35" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp34" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp36" } { dec_unsigned 64 0 } } } }

      /* STATEMENT cyfun::bb5::38
        *   %tmp37 = sext i32 %m.0 to i64
        *   %tmp38 = getelementptr inbounds [49 x i32]* @cyfun.iet, i64 0, i64 %tmp37
        *   %tmp39 = load i32* %tmp38, align 4 */
      { label 64 { lref 64 "cyfun::bb5::38" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp39" } { dec_unsigned 64 0 } } with
       { load 32
        { add 64 { addr 64 { fref 64 "cyfun.iet" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%m.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 4 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb5::41
        *   %tmp40 = sext i32 %tmp39 to i64
        *   %tmp41 = getelementptr inbounds [33 x i64]* @bit, i64 0, i64 %tmp40
        *   %tmp42 = load i64* %tmp41, align 8 */
      { label 64 { lref 64 "cyfun::bb5::41" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp42" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { addr 64 { fref 64 "bit" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%tmp39" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 8 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb5::47
        *   %tmp43 = and i64 %tmp42, %ir
        *   %tmp44 = icmp ne i64 %tmp43, 0
        *   %tmp45 = zext i1 %tmp44 to i64
        *   %tmp46 = or i64 %tmp36, %tmp45
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp47 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 0
        *   store i64 %tmp46, i64* %tmp47, align 8 */
      { label 64 { lref 64 "cyfun::bb5::47" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%ie" } { dec_unsigned 64 0 } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp36" } { dec_unsigned 64 0 } } }
        { conc 63 1 { dec_unsigned 63 0 }
         { neq 64
          { and 64 { load 64 { addr 64 { fref 64 "%tmp42" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%ir" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 0 }
         }
        }
       }
      }

      /* STATEMENT cyfun::bb5::48
        *   br label %bb48 */
      { label 64 { lref 64 "cyfun::bb5::48" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb48" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb48 ---------- */
      { label 64 { lref 64 "cyfun::bb48" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb48::0
        *   %tmp49 = add nsw i32 %j.0, -1 */
      { store { addr 64 { fref 64 "%tmp49" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT cyfun::bb48::1
        *   %tmp50 = add nsw i32 %l.0, -1 */
      { label 64 { lref 64 "cyfun::bb48::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp50" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT cyfun::bb48::2
        *   %tmp51 = add nsw i32 %m.0, -1 */
      { label 64 { lref 64 "cyfun::bb48::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp51" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%m.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT cyfun::bb48::3
        *   br label %bb3 */
      { label 64 { lref 64 "cyfun::bb48::3" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%l.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%m.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp49" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp50" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp51" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "cyfun::bb48::3:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb3" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb52 ---------- */
      { label 64 { lref 64 "cyfun::bb52" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb52::1
        *   %tmp53 = getelementptr inbounds %struct.GREAT* %k, i64 0, i32 2
        *   %tmp54 = load i64* %tmp53, align 8 */
      { store { addr 64 { fref 64 "%tmp54" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { load 64 { addr 64 { fref 64 "%k" } { dec_unsigned 64 0 } } } { dec_unsigned 64 16 } { dec_unsigned 1 0 } }
       }
      }

      /* STATEMENT cyfun::bb52::2
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp55 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 2 */
      { label 64 { lref 64 "cyfun::bb52::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp55" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%ie" } { dec_unsigned 64 16 } } }

      /* STATEMENT cyfun::bb52::3
        *   %tmp56 = load i64* %tmp55, align 8 */
      { label 64 { lref 64 "cyfun::bb52::3" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp56" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp55" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb52::5
        *   %tmp57 = xor i64 %tmp56, %tmp54
        *   store i64 %tmp57, i64* %tmp55, align 8 */
      { label 64 { lref 64 "cyfun::bb52::5" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp55" } { dec_unsigned 64 0 } } } with
       { xor 64 { load 64 { addr 64 { fref 64 "%tmp56" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp54" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb52::7
        *   %tmp58 = getelementptr inbounds %struct.GREAT* %k, i64 0, i32 1
        *   %tmp59 = load i64* %tmp58, align 8 */
      { label 64 { lref 64 "cyfun::bb52::7" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp59" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { load 64 { addr 64 { fref 64 "%k" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } { dec_unsigned 1 0 } }
       }
      }

      /* STATEMENT cyfun::bb52::8
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp60 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 1 */
      { label 64 { lref 64 "cyfun::bb52::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp60" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%ie" } { dec_unsigned 64 8 } } }

      /* STATEMENT cyfun::bb52::9
        *   %tmp61 = load i64* %tmp60, align 8 */
      { label 64 { lref 64 "cyfun::bb52::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp61" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp60" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb52::11
        *   %tmp62 = xor i64 %tmp61, %tmp59
        *   store i64 %tmp62, i64* %tmp60, align 8 */
      { label 64 { lref 64 "cyfun::bb52::11" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp60" } { dec_unsigned 64 0 } } } with
       { xor 64 { load 64 { addr 64 { fref 64 "%tmp61" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp59" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb52::13
        *   %tmp63 = getelementptr inbounds %struct.GREAT* %k, i64 0, i32 0
        *   %tmp64 = load i64* %tmp63, align 8 */
      { label 64 { lref 64 "cyfun::bb52::13" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp64" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%k" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb52::14
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp65 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 0 */
      { label 64 { lref 64 "cyfun::bb52::14" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp65" } { dec_unsigned 64 0 } } with { addr 64 { fref 64 "%ie" } { dec_unsigned 64 0 } } }

      /* STATEMENT cyfun::bb52::15
        *   %tmp66 = load i64* %tmp65, align 8 */
      { label 64 { lref 64 "cyfun::bb52::15" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp66" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%tmp65" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb52::17
        *   %tmp67 = xor i64 %tmp66, %tmp64
        *   store i64 %tmp67, i64* %tmp65, align 8 */
      { label 64 { lref 64 "cyfun::bb52::17" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%tmp65" } { dec_unsigned 64 0 } } } with
       { xor 64 { load 64 { addr 64 { fref 64 "%tmp66" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp64" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb52::19
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp68 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 1
        *   %tmp69 = load i64* %tmp68, align 8 */
      { label 64 { lref 64 "cyfun::bb52::19" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp69" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%ie" } { dec_unsigned 64 8 } } } }

      /* STATEMENT cyfun::bb52::22
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp71 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 2
        *   %tmp72 = load i64* %tmp71, align 8 */
      { label 64 { lref 64 "cyfun::bb52::22" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp72" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%ie" } { dec_unsigned 64 16 } } } }

      /* STATEMENT cyfun::bb52::23
        *   %tmp70 = shl i64 %tmp69, 16
        *   %tmp73 = add i64 %tmp70, %tmp72 */
      { label 64 { lref 64 "cyfun::bb52::23" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp73" } { dec_unsigned 64 0 } } with
       { add 64
        { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp69" } { dec_unsigned 64 0 } } } { dec_unsigned 64 16 } }
        { load 64 { addr 64 { fref 64 "%tmp72" } { dec_unsigned 64 0 } } }
        { dec_unsigned 1 0 }
       }
      }

      /* STATEMENT cyfun::bb52::25
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp74 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 0
        *   %tmp75 = load i64* %tmp74, align 8 */
      { label 64 { lref 64 "cyfun::bb52::25" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp75" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%ie" } { dec_unsigned 64 0 } } } }

      /* STATEMENT cyfun::bb52::28
        *   %ie = alloca %struct.GREAT, align 8
        *   %tmp77 = getelementptr inbounds %struct.GREAT* %ie, i64 0, i32 1
        *   %tmp78 = load i64* %tmp77, align 8 */
      { label 64 { lref 64 "cyfun::bb52::28" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp78" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%ie" } { dec_unsigned 64 8 } } } }

      /* STATEMENT cyfun::bb52::30
        *   %tmp76 = shl i64 %tmp75, 8
        *   %tmp79 = lshr i64 %tmp78, 8
        *   %tmp80 = add i64 %tmp76, %tmp79 */
      { label 64 { lref 64 "cyfun::bb52::30" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp80" } { dec_unsigned 64 0 } } with
       { add 64
        { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp75" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } }
        { r_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp78" } { dec_unsigned 64 0 } } } { dec_unsigned 64 8 } }
        { dec_unsigned 1 0 }
       }
      }

      /* STATEMENT cyfun::bb52::31
        *   br label %bb81 */
      { label 64 { lref 64 "cyfun::bb52::31" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%ietmp2.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%ietmp1.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%m.1" } { dec_unsigned 64 0 } } with { dec_unsigned 32 1 } { load 64 { addr 64 { fref 64 "%tmp80" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp73" } { dec_unsigned 64 0 } } } { dec_unsigned 32 5 } }

      { label 64 { lref 64 "cyfun::bb52::31:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb81" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb81 ---------- */
      { label 64 { lref 64 "cyfun::bb81" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb81::5
        *   %tmp82 = icmp slt i32 %j.1, 5
        *   br i1 %tmp82, label %bb83, label %bb95 */
      { switch
       { s_lt 32 { load 32 { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } } { dec_unsigned 32 5 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "cyfun::bb83" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "cyfun::bb95" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb83 ---------- */
      { label 64 { lref 64 "cyfun::bb83" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb83::4
        *   %ietmp1.0.tr = trunc i64 %ietmp1.0 to i8
        *   %tmp84 = and i8 %ietmp1.0.tr, 63
        *   %iec = alloca [9 x i8], align 1
        *   %tmp85 = sext i32 %j.1 to i64
        *   %tmp86 = getelementptr inbounds [9 x i8]* %iec, i64 0, i64 %tmp85
        *   store i8 %tmp84, i8* %tmp86, align 1 */
      { store
       { add 64 { addr 64 { fref 64 "%iec" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 1 }
         }
        }
        { dec_unsigned 1 0 }
       }
       with
       { and 8
        { select 64 0 7
         { load 64 { addr 64 { fref 64 "%ietmp1.0" } { dec_unsigned 64 0 } } }
        }
        { dec_unsigned 8 63 }
       }
      }

      /* STATEMENT cyfun::bb83::9
        *   %ietmp2.0.tr = trunc i64 %ietmp2.0 to i8
        *   %tmp87 = and i8 %ietmp2.0.tr, 63
        *   %iec = alloca [9 x i8], align 1
        *   %tmp88 = sext i32 %m.1 to i64
        *   %tmp89 = getelementptr inbounds [9 x i8]* %iec, i64 0, i64 %tmp88
        *   store i8 %tmp87, i8* %tmp89, align 1 */
      { label 64 { lref 64 "cyfun::bb83::9" } { dec_unsigned 64 0 } }
      { store
       { add 64 { addr 64 { fref 64 "%iec" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64 { load 32 { addr 64 { fref 64 "%m.1" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 1 }
         }
        }
        { dec_unsigned 1 0 }
       }
       with
       { and 8
        { select 64 0 7
         { load 64 { addr 64 { fref 64 "%ietmp2.0" } { dec_unsigned 64 0 } } }
        }
        { dec_unsigned 8 63 }
       }
      }

      /* STATEMENT cyfun::bb83::10
        *   br label %bb90 */
      { label 64 { lref 64 "cyfun::bb83::10" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb90" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb90 ---------- */
      { label 64 { lref 64 "cyfun::bb90" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb90::0
        *   %tmp91 = lshr i64 %ietmp2.0, 6 */
      { store { addr 64 { fref 64 "%tmp91" } { dec_unsigned 64 0 } } with
       { r_shift 64 64
        { load 64 { addr 64 { fref 64 "%ietmp2.0" } { dec_unsigned 64 0 } } }
        { dec_unsigned 64 6 }
       }
      }

      /* STATEMENT cyfun::bb90::1
        *   %tmp92 = lshr i64 %ietmp1.0, 6 */
      { label 64 { lref 64 "cyfun::bb90::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp92" } { dec_unsigned 64 0 } } with
       { r_shift 64 64
        { load 64 { addr 64 { fref 64 "%ietmp1.0" } { dec_unsigned 64 0 } } }
        { dec_unsigned 64 6 }
       }
      }

      /* STATEMENT cyfun::bb90::2
        *   %tmp93 = add nsw i32 %j.1, 1 */
      { label 64 { lref 64 "cyfun::bb90::2" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp93" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT cyfun::bb90::3
        *   %tmp94 = add nsw i32 %m.1, 1 */
      { label 64 { lref 64 "cyfun::bb90::3" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp94" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%m.1" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } { dec_unsigned 1 0 } }
      }

      /* STATEMENT cyfun::bb90::4
        *   br label %bb81 */
      { label 64 { lref 64 "cyfun::bb90::4" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.1" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%ietmp2.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%ietmp1.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%m.1" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp93" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp91" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp92" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp94" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "cyfun::bb90::4:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb81" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb95 ---------- */
      { label 64 { lref 64 "cyfun::bb95" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb95::0
        *   br label %bb96 */
      { store { addr 64 { fref 64 "%jj.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%itmp.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 8 } { dec_unsigned 64 0 } }

      { label 64 { lref 64 "cyfun::bb95::0:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb96" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb96 ---------- */
      { label 64 { lref 64 "cyfun::bb96" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb96::3
        *   %tmp97 = icmp sgt i32 %jj.0, 0
        *   br i1 %tmp97, label %bb98, label %bb131 */
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%jj.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "cyfun::bb98" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "cyfun::bb131" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb98 ---------- */
      { label 64 { lref 64 "cyfun::bb98" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb98::2
        *   %iec = alloca [9 x i8], align 1
        *   %tmp99 = sext i32 %jj.0 to i64
        *   %tmp100 = getelementptr inbounds [9 x i8]* %iec, i64 0, i64 %tmp99
        *   %tmp101 = load i8* %tmp100, align 1 */
      { store { addr 64 { fref 64 "%tmp101" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "%iec" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%jj.0" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb98::3
        *   %tmp102 = sext i8 %tmp101 to i32 */
      { label 64 { lref 64 "cyfun::bb98::3" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp102" } { dec_unsigned 64 0 } } with
       { s_ext 8 32 { load 8 { addr 64 { fref 64 "%tmp101" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb98::4
        *   br label %bb103 */
      { label 64 { lref 64 "cyfun::bb98::4" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb103" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb103 ---------- */
      { label 64 { lref 64 "cyfun::bb103" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb103::19
        *   %tmp104 = shl nsw i32 %tmp102, 2
        *   %tmp107 = and i32 %tmp104, 8
        *   %tmp106 = and i32 %tmp102, 4
        *   %tmp110 = or i32 %tmp107, %tmp106
        *   %tmp105 = lshr i32 %tmp102, 2
        *   %tmp109 = and i32 %tmp105, 2
        *   %tmp114 = or i32 %tmp110, %tmp109
        *   %tmp108 = lshr i32 %tmp102, 4
        *   %tmp113 = and i32 %tmp108, 1
        *   %tmp117 = or i32 %tmp114, %tmp113
        *   %tmp119 = zext i32 %tmp117 to i64
        *   %tmp112 = shl nsw i32 %tmp102, 1
        *   %tmp116 = and i32 %tmp112, 2
        *   %tmp111 = lshr i32 %tmp102, 5
        *   %tmp115 = and i32 %tmp111, 1
        *   %tmp118 = or i32 %tmp116, %tmp115
        *   %tmp120 = zext i32 %tmp118 to i64
        *   %tmp121 = sext i32 %jj.0 to i64
        *   %tmp122 = getelementptr inbounds [16 x [4 x [9 x i8]]]* @cyfun.is, i64 0, i64 %tmp119, i64 %tmp120, i64 %tmp121
        *   %tmp123 = load i8* %tmp122, align 1 */
      { store { addr 64 { fref 64 "%tmp123" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64
         { add 64
          { add 64 { addr 64 { fref 64 "cyfun.is" } { dec_unsigned 64 0 } }
           { select 128 0 63
            { u_mul 64 64
             { s_ext 32 64 { load 32 { addr 64 { fref 64 "%jj.0" } { dec_unsigned 64 0 } } } }
             { dec_unsigned 64 1 }
            }
           }
           { dec_unsigned 1 0 }
          }
          { select 128 0 63
           { u_mul 64 64
            { conc 32 32 { dec_unsigned 32 0 }
             { or 32
              { and 32
               { l_shift 32 32 { load 32 { addr 64 { fref 64 "%tmp102" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } }
               { dec_unsigned 32 2 }
              }
              { and 32
               { r_shift 32 32 { load 32 { addr 64 { fref 64 "%tmp102" } { dec_unsigned 64 0 } } } { dec_unsigned 32 5 } }
               { dec_unsigned 32 1 }
              }
             }
            }
            { dec_unsigned 64 9 }
           }
          }
          { dec_unsigned 1 0 }
         }
         { select 128 0 63
          { u_mul 64 64
           { conc 32 32 { dec_unsigned 32 0 }
            { or 32
             { or 32
              { or 32
               { and 32
                { l_shift 32 32 { load 32 { addr 64 { fref 64 "%tmp102" } { dec_unsigned 64 0 } } } { dec_unsigned 32 2 } }
                { dec_unsigned 32 8 }
               }
               { and 32 { load 32 { addr 64 { fref 64 "%tmp102" } { dec_unsigned 64 0 } } } { dec_unsigned 32 4 } }
              }
              { and 32
               { r_shift 32 32 { load 32 { addr 64 { fref 64 "%tmp102" } { dec_unsigned 64 0 } } } { dec_unsigned 32 2 } }
               { dec_unsigned 32 2 }
              }
             }
             { and 32
              { r_shift 32 32 { load 32 { addr 64 { fref 64 "%tmp102" } { dec_unsigned 64 0 } } } { dec_unsigned 32 4 } }
              { dec_unsigned 32 1 }
             }
            }
           }
           { dec_unsigned 64 36 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb103::22
        *   %tmp124 = sext i8 %tmp123 to i64
        *   %tmp125 = getelementptr inbounds [16 x i8]* @cyfun.ibin, i64 0, i64 %tmp124
        *   %tmp126 = load i8* %tmp125, align 1 */
      { label 64 { lref 64 "cyfun::bb103::22" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp126" } { dec_unsigned 64 0 } } with
       { load 8
        { add 64 { addr 64 { fref 64 "cyfun.ibin" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 8 64 { load 8 { addr 64 { fref 64 "%tmp123" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 1 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb103::25
        *   %tmp128 = shl i64 %itmp.0, 4
        *   %tmp127 = sext i8 %tmp126 to i64
        *   %tmp129 = or i64 %tmp128, %tmp127 */
      { label 64 { lref 64 "cyfun::bb103::25" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp129" } { dec_unsigned 64 0 } } with
       { or 64
        { l_shift 64 64 { load 64 { addr 64 { fref 64 "%itmp.0" } { dec_unsigned 64 0 } } } { dec_unsigned 64 4 } }
        { s_ext 8 64 { load 8 { addr 64 { fref 64 "%tmp126" } { dec_unsigned 64 0 } } } }
       }
      }

      /* STATEMENT cyfun::bb103::26
        *   %tmp130 = add nsw i32 %jj.0, -1 */
      { label 64 { lref 64 "cyfun::bb103::26" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp130" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%jj.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT cyfun::bb103::27
        *   br label %bb96 */
      { label 64 { lref 64 "cyfun::bb103::27" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%jj.0" } { dec_unsigned 64 0 } } { addr 64 { fref 64 "%itmp.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp130" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp129" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "cyfun::bb103::27:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb96" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb131 ---------- */
      { label 64 { lref 64 "cyfun::bb131" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb131::0
        *   store i64 0, i64* %iout, align 8 */
      { store { load 64 { addr 64 { fref 64 "%iout" } { dec_unsigned 64 0 } } } with { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb131::1
        *   br label %bb132 */
      { label 64 { lref 64 "cyfun::bb131::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } with { dec_unsigned 32 32 } }

      { label 64 { lref 64 "cyfun::bb131::1:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb132" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb132 ---------- */
      { label 64 { lref 64 "cyfun::bb132" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb132::2
        *   %tmp133 = icmp sgt i32 %j.2, 0
        *   br i1 %tmp133, label %bb134, label %bb149 */
      { switch
       { s_gt 32 { load 32 { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } } { dec_unsigned 32 0 } }
       { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "cyfun::bb134" } { dec_unsigned 64 0 } } }
       { default { label 64 { lref 64 "cyfun::bb149" } { dec_unsigned 64 0 } } }
      }

     /* --------- BASIC BLOCK bb134 ---------- */
      { label 64 { lref 64 "cyfun::bb134" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb134::0
        *   %tmp135 = load i64* %iout, align 8 */
      { store { addr 64 { fref 64 "%tmp135" } { dec_unsigned 64 0 } } with
       { load 64 { load 64 { addr 64 { fref 64 "%iout" } { dec_unsigned 64 0 } } } }
      }

      /* STATEMENT cyfun::bb134::1
        *   %tmp136 = shl i64 %tmp135, 1 */
      { label 64 { lref 64 "cyfun::bb134::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp136" } { dec_unsigned 64 0 } } with
       { l_shift 64 64 { load 64 { addr 64 { fref 64 "%tmp135" } { dec_unsigned 64 0 } } } { dec_unsigned 64 1 } }
      }

      /* STATEMENT cyfun::bb134::2
        *   store i64 %tmp136, i64* %iout, align 8 */
      { label 64 { lref 64 "cyfun::bb134::2" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%iout" } { dec_unsigned 64 0 } } } with { load 64 { addr 64 { fref 64 "%tmp136" } { dec_unsigned 64 0 } } } }

      /* STATEMENT cyfun::bb134::5
        *   %tmp137 = sext i32 %j.2 to i64
        *   %tmp138 = getelementptr inbounds [33 x i32]* @cyfun.ipp, i64 0, i64 %tmp137
        *   %tmp139 = load i32* %tmp138, align 4 */
      { label 64 { lref 64 "cyfun::bb134::5" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp139" } { dec_unsigned 64 0 } } with
       { load 32
        { add 64 { addr 64 { fref 64 "cyfun.ipp" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 4 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb134::8
        *   %tmp140 = sext i32 %tmp139 to i64
        *   %tmp141 = getelementptr inbounds [33 x i64]* @bit, i64 0, i64 %tmp140
        *   %tmp142 = load i64* %tmp141, align 8 */
      { label 64 { lref 64 "cyfun::bb134::8" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp142" } { dec_unsigned 64 0 } } with
       { load 64
        { add 64 { addr 64 { fref 64 "bit" } { dec_unsigned 64 0 } }
         { select 128 0 63
          { u_mul 64 64
           { s_ext 32 64 { load 32 { addr 64 { fref 64 "%tmp139" } { dec_unsigned 64 0 } } } }
           { dec_unsigned 64 8 }
          }
         }
         { dec_unsigned 1 0 }
        }
       }
      }

      /* STATEMENT cyfun::bb134::13
        *   %tmp143 = and i64 %tmp142, %itmp.0
        *   %tmp144 = icmp ne i64 %tmp143, 0
        *   %tmp145 = zext i1 %tmp144 to i64
        *   %tmp146 = or i64 %tmp136, %tmp145
        *   store i64 %tmp146, i64* %iout, align 8 */
      { label 64 { lref 64 "cyfun::bb134::13" } { dec_unsigned 64 0 } }
      { store { load 64 { addr 64 { fref 64 "%iout" } { dec_unsigned 64 0 } } } with
       { or 64 { load 64 { addr 64 { fref 64 "%tmp136" } { dec_unsigned 64 0 } } }
        { conc 63 1 { dec_unsigned 63 0 }
         { neq 64
          { and 64 { load 64 { addr 64 { fref 64 "%tmp142" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%itmp.0" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 0 }
         }
        }
       }
      }

      /* STATEMENT cyfun::bb134::14
        *   br label %bb147 */
      { label 64 { lref 64 "cyfun::bb134::14" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb147" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb147 ---------- */
      { label 64 { lref 64 "cyfun::bb147" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb147::0
        *   %tmp148 = add nsw i32 %j.2, -1 */
      { store { addr 64 { fref 64 "%tmp148" } { dec_unsigned 64 0 } } with
       { add 32 { load 32 { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
      }

      /* STATEMENT cyfun::bb147::1
        *   br label %bb132 */
      { label 64 { lref 64 "cyfun::bb147::1" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%j.2" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp148" } { dec_unsigned 64 0 } } } }

      { label 64 { lref 64 "cyfun::bb147::1:::1" } { dec_unsigned 64 0 } }
      { jump { label 64 { lref 64 "cyfun::bb132" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb149 ---------- */
      { label 64 { lref 64 "cyfun::bb149" } { dec_unsigned 64 0 } }

      /* STATEMENT cyfun::bb149::0
        *   ret void */
      { return }
    }
   }
  }

  /* Definition of function main */
  { func
   { label 64 { lref 64 "main" } { dec_unsigned 64 0 } }
   { arg_decls }
   { scope
    { decls
     { alloc 64 "%inp" 128 } /* Alloca'd memory */ 
     { alloc 64 "%key" 128 } /* Alloca'd memory */ 
     { alloc 64 "%out" 128 } /* Alloca'd memory */ 
     { alloc 64 "%newkey" 32 } /* Alloca'd memory */ 
     { alloc 64 "%tmp4" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp6" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp8" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp10" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp12" 64 } /* Local Variable (Non-Inlinable Instruction) */ 
    }
    { inits }
    { stmts

     /* --------- BASIC BLOCK bb ---------- */
      { label 64 { lref 64 "main::bb" } { dec_unsigned 64 0 } }

      /* STATEMENT main::bb::5
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp = getelementptr inbounds %struct.IMMENSE* %inp, i64 0, i32 0
        *   store i64 35, i64* %tmp, align 8 */
      { store { addr 64 { fref 64 "%inp" } { dec_unsigned 64 0 } } with { dec_unsigned 64 35 } }

      /* STATEMENT main::bb::7
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp1 = getelementptr inbounds %struct.IMMENSE* %inp, i64 0, i32 1
        *   store i64 26, i64* %tmp1, align 8 */
      { label 64 { lref 64 "main::bb::7" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%inp" } { dec_unsigned 64 8 } } with { dec_unsigned 64 26 } }

      /* STATEMENT main::bb::9
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp2 = getelementptr inbounds %struct.IMMENSE* %key, i64 0, i32 0
        *   store i64 2, i64* %tmp2, align 8 */
      { label 64 { lref 64 "main::bb::9" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%key" } { dec_unsigned 64 0 } } with { dec_unsigned 64 2 } }

      /* STATEMENT main::bb::11
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp3 = getelementptr inbounds %struct.IMMENSE* %key, i64 0, i32 1
        *   store i64 16, i64* %tmp3, align 8 */
      { label 64 { lref 64 "main::bb::11" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%key" } { dec_unsigned 64 8 } } with { dec_unsigned 64 16 } }

      /* STATEMENT main::bb::12
        *   %tmp4 = load i32* @value, align 4 */
      { label 64 { lref 64 "main::bb::12" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp4" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "value" } { dec_unsigned 64 0 } } } }

      /* STATEMENT main::bb::13
        *   %newkey = alloca i32, align 4
        *   store i32 %tmp4, i32* %newkey, align 4 */
      { label 64 { lref 64 "main::bb::13" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%newkey" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp4" } { dec_unsigned 64 0 } } } }

      /* STATEMENT main::bb::15
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp5 = getelementptr inbounds %struct.IMMENSE* %inp, i64 0, i32 0
        *   %tmp6 = load i64* %tmp5, align 8 */
      { label 64 { lref 64 "main::bb::15" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%inp" } { dec_unsigned 64 0 } } } }

      /* STATEMENT main::bb::17
        *   %inp = alloca %struct.IMMENSE, align 8
        *   %tmp7 = getelementptr %struct.IMMENSE* %inp, i64 0, i32 1
        *   %tmp8 = load i64* %tmp7, align 8 */
      { label 64 { lref 64 "main::bb::17" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%inp" } { dec_unsigned 64 8 } } } }

      /* STATEMENT main::bb::19
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp9 = getelementptr inbounds %struct.IMMENSE* %key, i64 0, i32 0
        *   %tmp10 = load i64* %tmp9, align 8 */
      { label 64 { lref 64 "main::bb::19" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp10" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%key" } { dec_unsigned 64 0 } } } }

      /* STATEMENT main::bb::21
        *   %key = alloca %struct.IMMENSE, align 8
        *   %tmp11 = getelementptr %struct.IMMENSE* %key, i64 0, i32 1
        *   %tmp12 = load i64* %tmp11, align 8 */
      { label 64 { lref 64 "main::bb::21" } { dec_unsigned 64 0 } }
      { store { addr 64 { fref 64 "%tmp12" } { dec_unsigned 64 0 } } with { load 64 { addr 64 { fref 64 "%key" } { dec_unsigned 64 8 } } } }

      /* STATEMENT main::bb::22
        *   %newkey = alloca i32, align 4
        *   %out = alloca %struct.IMMENSE, align 8
        *   call void @des(i64 %tmp6, i64 %tmp8, i64 %tmp10, i64 %tmp12, i32* %newkey, i32 %tmp4, %struct.IMMENSE* %out) */
      { label 64 { lref 64 "main::bb::22" } { dec_unsigned 64 0 } }
      { call { label 64 { lref 64 "des" } { dec_unsigned 64 0 } } { load 64 { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp8" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp10" } { dec_unsigned 64 0 } } } { load 64 { addr 64 { fref 64 "%tmp12" } { dec_unsigned 64 0 } } } { addr 64 { fref 64 "%newkey" } { dec_unsigned 64 0 } } { load 32 { addr 64 { fref 64 "%tmp4" } { dec_unsigned 64 0 } } } { addr 64 { fref 64 "%out" } { dec_unsigned 64 0 } } result }

      /* STATEMENT main::bb::23
        *   ret i32 0 */
      { label 64 { lref 64 "main::bb::23" } { dec_unsigned 64 0 } }
      { return { dec_unsigned 32 0 } }
    }
   }
  }
 }
}